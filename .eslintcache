[{"D:\\workspace\\MEdit\\src\\index.tsx":"1","D:\\workspace\\MEdit\\src\\containers\\viewer\\index.tsx":"2","D:\\workspace\\MEdit\\src\\containers\\sider\\index.tsx":"3","D:\\workspace\\MEdit\\src\\containers\\editor\\index.tsx":"4","D:\\workspace\\MEdit\\src\\containers\\Viewer\\index.tsx":"5","D:\\workspace\\MEdit\\src\\containers\\Editor\\index.tsx":"6","D:\\workspace\\MEdit\\src\\App.tsx":"7","D:\\workspace\\MEdit\\src\\utils\\markdown\\index.ts":"8","D:\\workspace\\MEdit\\src\\utils\\markdown\\simple-markdown.js":"9","D:\\workspace\\MEdit\\src\\component\\Inline\\Strong\\index.tsx":"10","D:\\workspace\\MEdit\\src\\component\\Inline\\InlineComponent.ts":"11","D:\\workspace\\MEdit\\src\\component\\Stable\\Indentation\\index.tsx":"12","D:\\workspace\\MEdit\\src\\component\\Block\\Paragraph\\index.tsx":"13","D:\\workspace\\MEdit\\src\\component\\EventBus.ts":"14","D:\\workspace\\MEdit\\src\\component\\DefaultComponent.ts":"15","D:\\workspace\\MEdit\\src\\component\\Inline\\Wbr\\index.ts":"16","D:\\workspace\\MEdit\\src\\component\\Block\\Header\\index.tsx":"17","D:\\workspace\\MEdit\\src\\component\\Block\\CodeBlock\\index.tsx":"18","D:\\workspace\\MEdit\\src\\component\\Block\\List\\index.tsx":"19","D:\\workspace\\MEdit\\src\\component\\Block\\Table\\index.tsx":"20","D:\\workspace\\MEdit\\src\\types\\ComponentTypes.ts":"21","D:\\workspace\\MEdit\\src\\component\\Inline\\Em\\index.ts":"22","D:\\workspace\\MEdit\\src\\component\\Inline\\Del\\index.ts":"23","D:\\workspace\\MEdit\\src\\component\\Inline\\Highlight\\index.ts":"24","D:\\workspace\\MEdit\\src\\component\\Inline\\PlainText\\index.ts":"25","D:\\workspace\\MEdit\\src\\component\\Block\\Paragraph\\EventManager.ts":"26","D:\\workspace\\MEdit\\src\\component\\Block\\EditableBlock.ts":"27","D:\\workspace\\MEdit\\src\\component\\Block\\dndWrapper.tsx":"28","D:\\workspace\\MEdit\\src\\containers\\header\\index.tsx":"29","D:\\workspace\\MEdit\\src\\containers\\header\\HeaderMenu.tsx":"30","D:\\workspace\\MEdit\\src\\utils\\editorTools\\FocusManager.ts":"31","D:\\workspace\\MEdit\\src\\utils\\editorTools\\getKey.ts":"32","D:\\workspace\\MEdit\\src\\utils\\editorTools\\dataToComponent.ts":"33","D:\\workspace\\MEdit\\src\\utils\\editorTools\\componentToData.ts":"34","D:\\workspace\\MEdit\\src\\utils\\notify\\index.ts":"35","D:\\workspace\\MEdit\\src\\utils\\api\\index.ts":"36","D:\\workspace\\MEdit\\src\\utils\\download\\index.ts":"37","D:\\workspace\\MEdit\\src\\component\\Block\\Quote\\index.tsx":"38","D:\\workspace\\MEdit\\src\\store\\index.ts":"39","D:\\workspace\\MEdit\\src\\types\\storeTypes.ts":"40"},{"size":233,"mtime":1619516457308,"results":"41","hashOfConfig":"42"},{"size":459,"mtime":1622011226437,"results":"43","hashOfConfig":"42"},{"size":3894,"mtime":1622799860037,"results":"44","hashOfConfig":"42"},{"size":2587,"mtime":1622780163953,"results":"45","hashOfConfig":"42"},{"size":344,"mtime":1616919600978,"results":"46","hashOfConfig":"47"},{"size":739,"mtime":1618381386029,"results":"48","hashOfConfig":"47"},{"size":202,"mtime":1621955385500,"results":"49","hashOfConfig":"42"},{"size":4054,"mtime":1619516457313,"results":"50","hashOfConfig":"42"},{"size":72514,"mtime":1619516457315,"results":"51","hashOfConfig":"42"},{"size":885,"mtime":1619516457298,"results":"52","hashOfConfig":"42"},{"size":4976,"mtime":1620374688158,"results":"53","hashOfConfig":"42"},{"size":13040,"mtime":1622859658594,"results":"54","hashOfConfig":"42"},{"size":4183,"mtime":1622390691452,"results":"55","hashOfConfig":"42"},{"size":1849,"mtime":1619516457294,"results":"56","hashOfConfig":"42"},{"size":1530,"mtime":1620374648297,"results":"57","hashOfConfig":"42"},{"size":1653,"mtime":1619516457300,"results":"58","hashOfConfig":"42"},{"size":4120,"mtime":1622801665950,"results":"59","hashOfConfig":"42"},{"size":455,"mtime":1616656479027,"results":"60","hashOfConfig":"61"},{"size":5755,"mtime":1622788003069,"results":"62","hashOfConfig":"42"},{"size":498,"mtime":1616656666621,"results":"63","hashOfConfig":"61"},{"size":728,"mtime":1621482798700,"results":"64","hashOfConfig":"42"},{"size":925,"mtime":1619516457296,"results":"65","hashOfConfig":"42"},{"size":848,"mtime":1619516457295,"results":"66","hashOfConfig":"42"},{"size":915,"mtime":1622811038921,"results":"67","hashOfConfig":"42"},{"size":4863,"mtime":1621482213203,"results":"68","hashOfConfig":"42"},{"size":3011,"mtime":1622780201697,"results":"69","hashOfConfig":"42"},{"size":13175,"mtime":1622005931052,"results":"70","hashOfConfig":"42"},{"size":2793,"mtime":1620374623226,"results":"71","hashOfConfig":"42"},{"size":252,"mtime":1621580257221,"results":"72","hashOfConfig":"42"},{"size":8328,"mtime":1622817973558,"results":"73","hashOfConfig":"42"},{"size":1595,"mtime":1620374475829,"results":"74","hashOfConfig":"42"},{"size":149,"mtime":1620374475899,"results":"75","hashOfConfig":"42"},{"size":1539,"mtime":1622785277321,"results":"76","hashOfConfig":"42"},{"size":1255,"mtime":1620374475284,"results":"77","hashOfConfig":"42"},{"size":918,"mtime":1622035201613,"results":"78","hashOfConfig":"42"},{"size":1111,"mtime":1622819770191,"results":"79","hashOfConfig":"42"},{"size":393,"mtime":1620787095102,"results":"80","hashOfConfig":"42"},{"size":3585,"mtime":1622391745439,"results":"81","hashOfConfig":"42"},{"size":541,"mtime":1622036344872,"results":"82","hashOfConfig":"42"},{"size":83,"mtime":1622035760667,"results":"83","hashOfConfig":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"im1ysq",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"suw9d",{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},"k1fhgd",{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"132"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"86"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"86"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"86"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"86"},"D:\\workspace\\MEdit\\src\\index.tsx",[],["192","193","194","195","196","197","198"],"D:\\workspace\\MEdit\\src\\containers\\viewer\\index.tsx",[],"D:\\workspace\\MEdit\\src\\containers\\sider\\index.tsx",["199","200","201","202","203","204","205","206"],"import React, { useEffect, useMemo, useState } from 'react';\r\nimport { Button, Input, Menu, Modal as AntdModal } from 'antd';\r\nimport store from 'store';\r\nimport api from 'utils/api';\r\nimport './style.scss';\r\nimport { SyncOutlined, FileAddOutlined } from '@ant-design/icons';\r\nimport notify, { notifyType } from 'utils/notify';\r\nimport { ActionTypes } from 'types/storeTypes';\r\n\r\nconst AddFileModal = (props: { showModal: boolean, handleCancle: () => void }) => {\r\n  const { showModal, handleCancle } = props;\r\n  const inputRef = React.useRef<any>(null);\r\n  const handleOk = () => {\r\n    const value = inputRef.current.state.value;\r\n    api.addArticle(value).then((res: any) => {\r\n      if (res.status === 200) {\r\n        notify(notifyType.addArticleSuccessful);\r\n      }\r\n      else notify(notifyType.addArticleFailed);\r\n    });\r\n    handleCancle();\r\n  };\r\n\r\n  return (\r\n    <AntdModal title='添加新文件' visible={showModal} onOk={handleOk} onCancel={handleCancle}>\r\n      <Input addonBefore='文件名' ref={inputRef} />\r\n    </AntdModal>\r\n  );\r\n};\r\n\r\n\r\nconst Sider: React.FC = () => {\r\n  const [articleList, setArticleList] = useState([]);\r\n  const [curTitle, setCurTitle] = useState<string>();\r\n  const [userName, setUserName] = useState(store.getState().userName);\r\n  const [showAddFileModal, setShowAddFileModal] = useState(false);\r\n  const [showLoadComfirmModal, setShowLoadComfirmModal] = useState(false);\r\n  let promise: Promise<any>;\r\n\r\n  store.subscribe(() => {\r\n    const { userName: user } = store.getState();\r\n    if (user !== userName) {\r\n      setUserName(user);\r\n      console.log(user);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    refreshMenu();\r\n  }, [userName]);\r\n\r\n  const refreshMenu = async () => {\r\n    console.log(userName);\r\n    if (userName) {\r\n      const res = await api.getArticleTitles();\r\n      console.log(res);\r\n      setArticleList(res.data);\r\n      console.log('+++++++++++++++++++++++', userName);\r\n    }\r\n    else {\r\n      setArticleList([]);\r\n      console.log('========================', userName);\r\n    }\r\n  };\r\n\r\n  async function* loadArticle(title: string) {\r\n    const res = await api.getArticle(title);\r\n    store.dispatch({ type: ActionTypes.changeArticle, curTitle: title });\r\n    yield setShowLoadComfirmModal(true);\r\n    const { content } = res.data;\r\n    (window as any).activeEditor.loadContent(content);\r\n  }\r\n\r\n  const loadInterator = useMemo(() => {\r\n    const interator = curTitle ? loadArticle(curTitle) : undefined;\r\n    interator?.next();\r\n    return interator;\r\n  }, [curTitle]);\r\n\r\n  const addNewFile = () => {\r\n    if (!userName) {\r\n      notify(notifyType.diy, '该操作需要登录');\r\n      return;\r\n    }\r\n    setShowAddFileModal(true);\r\n  };\r\n\r\n  const notifyWords = userName ? '云端存档为空' : '查看云端存档，请先登录';\r\n\r\n  return (\r\n    <div className='siderContainer'>\r\n      <div className='siderContent'>\r\n        <div className='siderHeader'>\r\n          <Button type='text' onClick={refreshMenu}><SyncOutlined /></Button>\r\n          <Button type='text' onClick={addNewFile}><FileAddOutlined /></Button>\r\n        </div>\r\n        {articleList.length ?\r\n          <Menu mode='inline' style={{ width: '100%' }}>\r\n            {articleList.map(article => {\r\n              return <Menu.Item key={article} onClick={() => setCurTitle(article)}>{article}</Menu.Item>;\r\n            })}\r\n          </Menu>\r\n          : notifyWords}\r\n      </div>\r\n      <AddFileModal showModal={showAddFileModal} handleCancle={() => setShowAddFileModal((false))} />\r\n      <AntdModal\r\n        title='提示'\r\n        visible={showLoadComfirmModal}\r\n        onCancel={() => setShowLoadComfirmModal(false)}\r\n        onOk={() => {\r\n          loadInterator?.next();\r\n          setShowLoadComfirmModal(false);\r\n        }}\r\n      >\r\n        是否覆盖当前文件？\r\n      </AntdModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sider;","D:\\workspace\\MEdit\\src\\containers\\editor\\index.tsx",["207","208","209","210"],"import React, { useEffect, useRef } from 'react';\r\nimport './style.scss';\r\nimport Intendentation, { IndentationDataItem } from 'component/Stable/Indentation';\r\nimport FocusManager from 'utils/editorTools/FocusManager';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport api from 'utils/api';\r\nimport store from 'store';\r\nimport notify, { notifyType } from 'utils/notify';\r\nimport { DefaultDataItem } from 'types/ComponentTypes';\r\n\r\nexport interface EditorProps {\r\n\r\n}\r\nconst Editor: React.FC<EditorProps> = () => {\r\n  const editorRef = useRef<HTMLDivElement>(null);\r\n  const indentationRef = useRef<HTMLDivElement>(null);\r\n  const focusManager = new FocusManager({ rootRef: editorRef });\r\n\r\n  useEffect(() => {\r\n    focusManager.init();\r\n    const root = (indentationRef as any).current.decoratedRef.current;\r\n\r\n    const getDataList = () => {\r\n      const dataList = root.getDataList();\r\n      const parse = (node: DefaultDataItem): DefaultDataItem => {\r\n        const { type, childList, content, listData, headerLevel } = node;\r\n        return {\r\n          type,\r\n          childList: childList?.map(child => parse(child)) || [],\r\n          content,\r\n          listData,\r\n          headerLevel\r\n        };\r\n      };\r\n      return dataList.map((data: any) => parse(data));\r\n    };\r\n\r\n    const saveContent = () => {\r\n      const { curTitle, userName } = store.getState();\r\n      if (curTitle && userName) {\r\n        const content = JSON.stringify(getDataList()).replace(/\"/g, '\\\\\"');\r\n        const res = api.saveArticle(curTitle, content);\r\n        if (res.status === 200) {\r\n          notify(notifyType.updateArticleSuccessful);\r\n        }\r\n      }\r\n    };\r\n\r\n    (window as any).activeEditor = {\r\n      getMarkdown: () => {\r\n        const md = root.getMarkdown();\r\n        console.log(md);\r\n        return md;\r\n      },\r\n      getDataList,\r\n      loadContent: (content: string) => {\r\n        root.loadContent(content);\r\n      },\r\n      saveContent\r\n    };\r\n\r\n    setInterval(saveContent, 1000 * 60 * 5);\r\n  }, []);\r\n  const mountValues = { childList: [], focusManager, handleInsertSiblings: () => { }, handleDestroy: () => { } };\r\n  const dndValues = { findIndex: (key: string) => { }, dndMove: (sourceKey: string, targetIndex: number) => { } };\r\n\r\n\r\n  return (\r\n    <div className='editor-wrapper' ref={editorRef}>\r\n      <Intendentation id='initIndentation' depth={0} ref={indentationRef as any} mountValues={mountValues} dndValues={dndValues} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragDropContext(HTML5Backend)(Editor);","D:\\workspace\\MEdit\\src\\containers\\Viewer\\index.tsx",[],["211","212","213","214","215","216","217","218"],"D:\\workspace\\MEdit\\src\\containers\\Editor\\index.tsx",["219"],"import React, { useEffect, useRef } from 'react';\r\nimport './style.scss';\r\nimport Intendentation from 'component/Stable/Indentation';\r\nimport FocusManager from 'utils/FocusManager';\r\n\r\nexport interface EditorProps {\r\n\r\n}\r\nconst Editor: React.FC<EditorProps> = () => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const focusManager = new FocusManager({ rootRef: ref });\r\n  useEffect(() => {\r\n    focusManager.init();\r\n  }, []);\r\n  const stableValues = { childList: [], focusManager, handleInsertSiblings: () => { }, handleDestroy: () => { } };\r\n  return (\r\n    <div className='editor-wrapper' ref={ref}>\r\n      <Intendentation id='initIndentation' depth={0} stableValues={stableValues} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;","D:\\workspace\\MEdit\\src\\App.tsx",[],"D:\\workspace\\MEdit\\src\\utils\\markdown\\index.ts",[],"D:\\workspace\\MEdit\\src\\utils\\markdown\\simple-markdown.js",[],["220","221","222","223","224","225","226"],"D:\\workspace\\MEdit\\src\\component\\Inline\\Strong\\index.tsx",["227","228"],"import { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport { InlineStyleTypes } from 'types/ComponentTypes';\r\nimport InlineComponent from '../InlineComponent';\r\n\r\ninterface StrongProps extends DefaultComponentProps {\r\n\r\n}\r\n\r\nexport default class Strong extends InlineComponent {\r\n  public component: Element;\r\n\r\n  constructor(props: StrongProps | DefaultComponentProps) {\r\n    super(props);\r\n    this.component = document.createElement('strong');\r\n    this.refresh();\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return `**${this.getContent()}**`;\r\n  }\r\n\r\n  public getContent() {\r\n    return this.childList.reduce((pre, cur) => {\r\n      return pre + (cur as InlineComponent).getContent();\r\n    }, '');\r\n  }\r\n\r\n  private refresh() {\r\n    this.component.innerHTML = '';\r\n    this.childList.forEach(child => {\r\n      this.component.appendChild(child.component);\r\n    });\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\component\\Inline\\InlineComponent.ts",["229","230","231","232","233","234","235","236"],"import EventBus, { BusEventTypes } from 'component/EventBus';\r\nimport DefaultComponent, { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport { BlockStyleTypes, DefaultDataItem, InlineStyleTypes } from 'types/ComponentTypes';\r\nimport { componentsToDataList } from 'utils/editorTools/componentToData';\r\nimport './style.scss';\r\n\r\nexport interface InlineMountProps {\r\n  eventBus: EventBus;\r\n  handleEnter: (key: string, cur?: DefaultDataItem, next?: DefaultDataItem) => void;\r\n  handleDestroy: (key: string) => void;\r\n  handleInsertSibling: (key: string, components: DefaultComponent[], replace: boolean) => void;\r\n}\r\nexport default abstract class InlineComponent extends DefaultComponent {\r\n  public inlineMountProps?: InlineMountProps;\r\n\r\n  constructor(props: DefaultComponentProps) {\r\n    super(props);\r\n  }\r\n\r\n  onChildInsertSibling(key: string, siblings: DefaultComponent[], replace: boolean) {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    const index = this.findChildIndex(key);\r\n    let temp = index;\r\n    siblings.forEach(sibling => {\r\n      (this.component.childNodes[temp] as Element).insertAdjacentElement('afterend', sibling.component);\r\n      this.mountChild(sibling as InlineComponent);\r\n      temp += 1;\r\n    });\r\n    if (replace) {\r\n      console.log('replace child: ', this.childList[index].key);\r\n      this.inlineMountProps?.eventBus.remove(this.childList[index].key);\r\n      this.childList.splice(index, 1, ...siblings);\r\n      this.component.removeChild(this.component.childNodes[index]);\r\n    } else {\r\n      this.childList.splice(index + 1, 0, ...siblings);\r\n    }\r\n  }\r\n\r\n  onChildEnter(key: string, _cur?: DefaultDataItem, _next?: DefaultDataItem) {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    const index = this.findChildIndex(key);\r\n    const curDataList = componentsToDataList(this.childList.slice(0, index) as InlineComponent[]);\r\n    const nextDataList = componentsToDataList(this.childList.slice(index + 1) as InlineComponent[]);\r\n    (_cur?.childList.length || _cur?.content?.length) && curDataList.push(_cur);\r\n    (_next?.childList.length || _next?.content?.length) && nextDataList.unshift(_next);\r\n    const cur = curDataList.length ? { type: this.type, childList: curDataList } : undefined;\r\n    const next = nextDataList.length ? { type: this.type, childList: nextDataList } : undefined;\r\n    this.inlineMountProps!.handleEnter(this.key, cur, next);\r\n  }\r\n\r\n  onChildDestroy(key: string) {\r\n    console.log('destroy:', key);\r\n    const index = this.findChildIndex(key);\r\n    if (document.contains(this.childList[index].component))\r\n      this.component.removeChild(this.component.childNodes[index]);\r\n    this.childList.splice(index, 1);\r\n    if (!this.childList.length) {\r\n      this.destroy();\r\n    }\r\n  }\r\n\r\n  public mountChild(child: InlineComponent) {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    const that = this;\r\n    child.mount({\r\n      eventBus: this.inlineMountProps!.eventBus,\r\n      handleEnter: this.onChildEnter.bind(that),\r\n      handleDestroy: this.onChildDestroy.bind(that),\r\n      handleInsertSibling: this.onChildInsertSibling.bind(that)\r\n    });\r\n  }\r\n\r\n  public mount(props: InlineMountProps) {\r\n    if (this.mounted) return;\r\n    this.mounted = true;\r\n    this.inlineMountProps = props;\r\n    const that = this;\r\n    this.inlineMountProps.eventBus.subscribe(BusEventTypes.showMarkdown, this.key, (values: { show: boolean }) => {\r\n      const { show } = values;\r\n      if (this.component.getAttribute('class') && (!!this.component.getAttribute('class')!.match(/mark/) === show)) return;\r\n      this.component.setAttribute('class', `${this.type}-${show ? 'mark' : ''}`);\r\n    });\r\n    this.childList.forEach(child => {\r\n      const { eventBus } = props;\r\n      (child as InlineComponent).mount({\r\n        eventBus,\r\n        handleEnter: this.onChildEnter.bind(that),\r\n        handleDestroy: this.onChildDestroy.bind(that),\r\n        handleInsertSibling: this.onChildInsertSibling.bind(that)\r\n      });\r\n    });\r\n  }\r\n\r\n  public unmount() {\r\n    this.inlineMountProps = undefined;\r\n    this.mounted = false;\r\n  }\r\n\r\n  public destroyChild(key: string) {\r\n    console.log('remove: ', key);\r\n    const index = this.findChildIndex(key);\r\n    this.childList.splice(index, 1);\r\n    this.inlineMountProps?.eventBus.remove(key);\r\n    const childNode = this.component.childNodes[index];\r\n    if (childNode && this.component.contains(childNode))\r\n      this.component.removeChild(this.component.childNodes[index]);\r\n  }\r\n\r\n  // mount but not contains\r\n  public destroy() {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    this.childList.forEach(child => child.destroy());\r\n    this.inlineMountProps!.eventBus.remove(this.key);\r\n    this.inlineMountProps!.handleDestroy(this.key);\r\n  }\r\n\r\n  abstract getContent(): string;\r\n}\r\n","D:\\workspace\\MEdit\\src\\component\\Stable\\Indentation\\index.tsx",["237","238","239","240","241","242","243","244","245"],"D:\\workspace\\MEdit\\src\\component\\Block\\Paragraph\\index.tsx",["246","247"],"import React, { RefObject } from 'react';\r\nimport DefaultComponent, { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport PlainText from 'component/Inline/PlainText';\r\nimport { BlockStyleTypes, DefaultDataItem, InlineStyleTypes } from 'types/ComponentTypes';\r\nimport { dataListToComponents } from 'utils/editorTools/dataToComponent';\r\nimport EditableBlock from '../EditableBlock';\r\nimport dndWrapper from '../dndWrapper';\r\nimport './style.scss';\r\nimport { defaultBlockProps } from '../types';\r\n\r\nexport class ParagraphComponent extends EditableBlock {\r\n  constructor(props: DefaultComponentProps) {\r\n    super({ ...props, component: document.createElement('p') });\r\n  }\r\n\r\n  public refresh() {\r\n    this.component.innerHTML = '';\r\n    this.childList.forEach(child => {\r\n      this.component.appendChild(child.component);\r\n    });\r\n  }\r\n\r\n  public clone(childList: DefaultComponent[] = []) {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    const result = new ParagraphComponent({ type: BlockStyleTypes.paragragh, childList });\r\n    result.mount({\r\n      handleInsertSiblings: this.blockMountProps!.handleInsertSiblings,\r\n      handleEnter: this.blockMountProps!.handleEnter,\r\n      handleTab: this.blockMountProps!.handleTab,\r\n      handleDestroy: this.blockMountProps!.handleDestroy\r\n    });\r\n    return result;\r\n  }\r\n\r\n  static createDefault = () => {\r\n    const plainText = new PlainText({ type: InlineStyleTypes.plainText, content: '' });\r\n    const paragragh = new ParagraphComponent({ type: BlockStyleTypes.paragragh });\r\n    paragragh.appendChild(plainText);\r\n    return paragragh;\r\n  };\r\n\r\n}\r\n\r\n\r\nexport interface ParagraphProps extends defaultBlockProps {\r\n  [propName: string]: any;\r\n}\r\n\r\nclass Paragraph extends React.Component<ParagraphProps> {\r\n  target: ParagraphComponent;\r\n\r\n  ref: RefObject<HTMLDivElement>;\r\n\r\n  key: string;\r\n\r\n  constructor(props: ParagraphProps) {\r\n    super(props);\r\n    this.ref = React.createRef();\r\n    const { id, mountValues } = props;\r\n    const { childList, handleTab, handleInsertSiblings, handleDestroy, focusManager } = mountValues;\r\n    this.key = id;\r\n    const onParagraphInsertSibling = (sibling: DefaultDataItem, replace: boolean) => {\r\n      handleInsertSiblings(this.key, [sibling], replace);\r\n    };\r\n\r\n    const onEnter = (key: string, nextChildren: DefaultDataItem[]) => {\r\n      handleInsertSiblings(this.key, [{ type: BlockStyleTypes.paragragh, childList: nextChildren }], false);\r\n    };\r\n\r\n    const onTab = (key: string, isInside: boolean) => {\r\n      handleTab(this.key, isInside);\r\n    };\r\n\r\n    const onDestroy = () => {\r\n      console.log('destroy!!!!!!!!!!!!!!!!!!!!!');\r\n      handleDestroy(this.key);\r\n    };\r\n\r\n    this.target = new ParagraphComponent({\r\n      type: BlockStyleTypes.paragragh, childList: dataListToComponents(childList)\r\n    });\r\n    this.target.mount({ handleInsertSiblings: onParagraphInsertSibling, handleEnter: onEnter, handleTab: onTab, handleDestroy: onDestroy });\r\n    focusManager.register(this.key, this.target.detectAnchor);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refresh();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.refresh();\r\n  }\r\n\r\n  public getDataList() {\r\n    return this.target.getDataList();\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return this.target.getMarkdown();\r\n  }\r\n\r\n  public transToDataItem(): DefaultDataItem {\r\n    return {\r\n      type: BlockStyleTypes.paragragh,\r\n      childList: this.getDataList()\r\n    };\r\n  }\r\n\r\n  private refresh() {\r\n    this.ref.current!.appendChild(this.target.component);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      // 这些 props 由 React DnD注入，参考`collect`函数定义\r\n      isDragging, connectDragSource, connectDragPreview, connectDropTarget\r\n    } = this.props;\r\n    return connectDropTarget(\r\n      connectDragPreview(\r\n        <div className='blockWrapper'>\r\n          {connectDragSource(<div className='dragIcon'>::</div>)}\r\n          <div className='paragraph' style={{ opacity: isDragging ? 0.5 : 1 }} ref={this.ref} dangerouslySetInnerHTML={{ __html: '' }} />\r\n        </div>\r\n\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default dndWrapper<ParagraphProps>(Paragraph);","D:\\workspace\\MEdit\\src\\component\\EventBus.ts",["248","249","250","251","252","253","254","255","256","257"],"export enum BusEventTypes {\r\n  refresh = 'refresh',\r\n  recordAnchor = 'recordAnchor',\r\n  parseAnchor = 'parseAnchor',\r\n  showMarkdown = 'showMarkdown',\r\n  selectState = 'selectState',\r\n  findEnterAnchor = 'findEnterAnchor',\r\n  deleteEmpty = 'deleteEmpty',\r\n  insertSibling = 'insertSibling'\r\n}\r\n\r\nexport type TaskList = Array<{\r\n  type: BusEventTypes,\r\n  listeners: { key: string, func: Function }[]\r\n}>;\r\n\r\nexport default class EventBus {\r\n  taskList: TaskList;\r\n\r\n  constructor() {\r\n    this.taskList = [];\r\n  }\r\n\r\n  dispatch(type: BusEventTypes, values?: { [propName: string]: any }, once: boolean = false, inCase?: () => void) {\r\n    const task = this.taskList.find(item => item.type === type);\r\n    if (!task) {\r\n      inCase && inCase();\r\n      console.error('no task exist in type: ', type);\r\n      return;\r\n    }\r\n    // task.listeners.forEach(listener => listener.func(values));\r\n    for (let i = 0; i < task.listeners.length; i++) {\r\n      const result = task.listeners[i].func(values);\r\n      if (once && result) break;\r\n    }\r\n  }\r\n\r\n  subscribe(type: BusEventTypes, key: string, func: Function) {\r\n    const task = this.taskList.find(item => item.type === type);\r\n    if (task) {\r\n      if (task.listeners.find(item => item.key === key))\r\n        console.error('repeat listener: ', key, type);\r\n      task.listeners.push({ key, func });\r\n    } else {\r\n      this.taskList.push({ type, listeners: [{ key, func }] });\r\n    }\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.taskList.forEach(task => {\r\n      const index = task.listeners.findIndex(item => item.key === key);\r\n      if (index < 0) return;\r\n      task.listeners.splice(index, 1);\r\n    });\r\n  }\r\n\r\n  clean() {\r\n    this.taskList = [];\r\n  }\r\n\r\n  getKeysOnType(type: BusEventTypes) {\r\n    return this.taskList.find(task => task.type === type)?.listeners.map(item => item.key);\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\component\\DefaultComponent.ts",[],"D:\\workspace\\MEdit\\src\\component\\Inline\\Wbr\\index.ts",[],"D:\\workspace\\MEdit\\src\\component\\Block\\Header\\index.tsx",["258","259","260","261","262","263","264","265","266","267"],"import * as React from 'react';\r\nimport { RefObject } from 'react';\r\nimport DefaultComponent, { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport PlainText from 'component/Inline/PlainText';\r\nimport { BlockStyleTypes, DefaultDataItem, InlineStyleTypes } from 'types/ComponentTypes';\r\nimport { dataListToComponents } from 'utils/editorTools/dataToComponent';\r\nimport dndWrapper from '../dndWrapper';\r\nimport EditableBlock from '../EditableBlock';\r\nimport { defaultBlockProps } from '../types';\r\nimport './style.scss';\r\n\r\nexport class HeaderComponent extends EditableBlock {\r\n\r\n  content: string;\r\n\r\n  constructor(props: DefaultComponentProps & { level: number, content: string }) {\r\n    super({ ...props, component: document.createElement(`h${props.level}`) });\r\n    this.content = props.content;\r\n    this.doMarkdownParse = false;\r\n    this.refresh();\r\n    console.log(props);\r\n  }\r\n\r\n  public getContent() {\r\n    return this.component.textContent;\r\n  }\r\n\r\n  public refresh() {\r\n    this.component.innerHTML = this.content || '';\r\n  }\r\n\r\n  public clone(childList: DefaultComponent[] = []) {\r\n    throw new Error('unmounted component cannot use this function');\r\n  }\r\n\r\n  static createDefault = () => {\r\n    throw new Error('unmounted component cannot use this function');\r\n  };\r\n\r\n}\r\n\r\nexport interface HeaderProps extends defaultBlockProps {\r\n  content?: string;\r\n  level: number;\r\n  [propName: string]: any;\r\n}\r\n\r\nclass Header extends React.Component<HeaderProps> {\r\n  public key: string;\r\n\r\n  ref: RefObject<HTMLDivElement>;\r\n\r\n  content: string;\r\n\r\n  target: HeaderComponent;\r\n\r\n  constructor(props: HeaderProps) {\r\n    super(props);\r\n    const { id, level, mountValues } = props;\r\n    const { content = '' } = mountValues;\r\n    console.log(props);\r\n    this.key = id;\r\n    this.content = content;\r\n    this.ref = React.createRef();\r\n    const { childList, handleTab, handleInsertSiblings, handleDestroy, focusManager } = mountValues;\r\n    const onHeaderInsertSibling = (sibling: DefaultDataItem, replace: boolean) => {\r\n      handleInsertSiblings(this.key, [sibling], replace);\r\n    };\r\n\r\n    const onEnter = (key: string, nextChildren: DefaultDataItem[]) => {\r\n      handleInsertSiblings(this.key, [{ type: BlockStyleTypes.paragragh, childList: nextChildren }], false);\r\n    };\r\n\r\n    const onTab = (key: string, isInside: boolean) => {\r\n      handleTab(this.key, isInside);\r\n    };\r\n\r\n    const onDestroy = () => {\r\n      console.log('destroy!!!!!!!!!!!!!!!!!!!!!');\r\n      handleDestroy(this.key);\r\n    };\r\n    this.target = new HeaderComponent({ type: BlockStyleTypes.header, childList: [], level, content });\r\n    this.target.mount({ handleInsertSiblings: onHeaderInsertSibling, handleEnter: onEnter, handleTab: onTab, handleDestroy: onDestroy });\r\n    focusManager.register(this.key, this.target.detectAnchor);\r\n    this.refresh = this.refresh.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refresh();\r\n  }\r\n\r\n  public getContent() {\r\n    return this.ref.current!.innerHTML;\r\n  }\r\n\r\n  public getDataList() {\r\n    return [{ type: InlineStyleTypes.plainText, childList: [], content: this.target.getContent() }];\r\n  }\r\n\r\n  public getMarkdown() {\r\n    const arr = new Array(this.props.level).fill(1);\r\n    return `${arr.reduce((pre, cur) => `${pre}#`, '')} ${this.target.getContent()}`;\r\n  }\r\n\r\n  public transToDataItem() {\r\n    return {\r\n      type: BlockStyleTypes.header,\r\n      childList: [],\r\n      content: this.target.getContent()\r\n    };\r\n  }\r\n\r\n  // content -> DOM\r\n  private refresh() {\r\n    (this.ref.current as any).appendChild(this.target.component);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isDragging, connectDragSource, connectDragPreview, connectDropTarget\r\n    } = this.props;\r\n    return connectDropTarget(\r\n      connectDragPreview(\r\n        <div className='blockWrapper'>\r\n          {connectDragSource(<div className='dragIcon'>::</div>)}\r\n          <div className='header' ref={this.ref} style={{ opacity: isDragging ? 0.5 : 1 }} dangerouslySetInnerHTML={{ __html: '' }} />\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default dndWrapper<HeaderProps>(Header);\r\n","D:\\workspace\\MEdit\\src\\component\\Block\\CodeBlock\\index.tsx",["268"],"import * as React from 'react';\r\n\r\nexport interface CodeBlockProps {\r\n  content?: string;\r\n  handleInsertParagraph: (key: string) => void;\r\n}\r\n\r\nexport interface CodeBlockState {\r\n\r\n}\r\n\r\nclass CodeBlock extends React.Component<CodeBlockProps, CodeBlockState> {\r\n  constructor(props: CodeBlockProps) {\r\n    super(props);\r\n    console.log('here');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>codeBlock</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;",["269","270","271","272","273","274","275","276"],"D:\\workspace\\MEdit\\src\\component\\Block\\List\\index.tsx",["277","278","279","280"],"import DefaultComponent, { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport PlainText from 'component/Inline/PlainText';\r\nimport * as React from 'react';\r\nimport { RefObject } from 'react';\r\nimport { BlockStyleTypes, DefaultDataItem, InlineStyleTypes } from 'types/ComponentTypes';\r\nimport { dataListToComponents } from 'utils/editorTools/dataToComponent';\r\nimport dndWrapper from '../dndWrapper';\r\nimport EditableBlock from '../EditableBlock';\r\nimport { defaultBlockProps } from '../types';\r\nimport './style.scss';\r\n\r\nexport class LiComponent extends EditableBlock {\r\n  constructor(props: DefaultComponentProps) {\r\n    super({ ...props, component: document.createElement('p') });\r\n    this.refresh();\r\n  }\r\n\r\n  public refresh() {\r\n    this.component.innerHTML = '';\r\n    this.childList.forEach(child => {\r\n      this.component.appendChild(child.component);\r\n    });\r\n  }\r\n\r\n  public clone(childList: DefaultComponent[] = []) {\r\n    throw new Error('unmounted component cannot use this function');\r\n    const result = new LiComponent({ type: BlockStyleTypes.li, childList });\r\n    result.mount({\r\n      handleInsertSiblings: this.blockMountProps!.handleInsertSiblings,\r\n      handleEnter: this.blockMountProps!.handleEnter,\r\n      handleTab: this.blockMountProps!.handleTab,\r\n      handleDestroy: this.blockMountProps!.handleDestroy\r\n    });\r\n    return result;\r\n  }\r\n\r\n  static createDefault = () => {\r\n    const plainText = new PlainText({ type: InlineStyleTypes.plainText, content: '' });\r\n    const li = new LiComponent({ type: BlockStyleTypes.li });\r\n    li.appendChild(plainText);\r\n    return li;\r\n  };\r\n\r\n}\r\n\r\nexport interface ListProps extends defaultBlockProps {\r\n  listData?: Array<DefaultDataItem[]>;\r\n  [propName: string]: any;\r\n}\r\n\r\nclass List extends React.Component<ListProps> {\r\n  public key: string;\r\n\r\n  ref: RefObject<HTMLUListElement> | RefObject<HTMLOListElement>;\r\n\r\n  listData: Array<DefaultDataItem[]>;\r\n\r\n  childList: LiComponent[];\r\n\r\n  constructor(props: ListProps) {\r\n    super(props);\r\n    console.log(props);\r\n    const { id, listData } = props;\r\n    this.key = id;\r\n    this.ref = React.createRef();\r\n    this.listData = listData || [];\r\n    this.childList = [];\r\n    this.constructChildList = this.constructChildList.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.listData, this.childList);\r\n    this.constructChildList();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n  }\r\n\r\n\r\n  // DOM -> listData\r\n  private getListData() {\r\n    this.listData = this.childList.map(child => {\r\n      return child.getDataList();\r\n    });\r\n    return this.listData;\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return this.childList.map(child => {\r\n      return `- ${child.getMarkdown()}`;\r\n    }).join('\\n');\r\n  }\r\n\r\n  public transToDataItem(): DefaultDataItem {\r\n    return {\r\n      type: BlockStyleTypes.list,\r\n      childList: [],\r\n      listData: this.getListData()\r\n    };\r\n  }\r\n\r\n  findChildIndex(key: string): number {\r\n    if (!this.childList.length)\r\n      throw new Error('this component has no child, but use findChildIndex');\r\n    const index = this.childList.findIndex(item => item.key === key);\r\n    if (index < 0) throw new Error(`there is no child which key is ${key}`);\r\n    return index;\r\n  }\r\n\r\n  // listData -> childList -> DOM\r\n  private constructChildList() {\r\n    this.listData = this.listData.length ? this.listData : [[{ type: InlineStyleTypes.plainText, content: '', childList: [] }]];\r\n    const { mountValues } = this.props;\r\n    const { focusManager, handleTab, handleInsertSiblings, handleDestroy } = mountValues;\r\n\r\n    const onChildAddListItem = (key: string, data: DefaultDataItem[]) => {\r\n      const index = this.findChildIndex(key);\r\n      this.getListData();\r\n      this.listData.splice(index + 1, 0, data);\r\n      this.constructChildList();\r\n    };\r\n\r\n    const onEnter = (key: string, nextChildren: DefaultDataItem[]) => {\r\n      onChildAddListItem(key, nextChildren);\r\n    };\r\n\r\n    const onTab = (key: string, isInside: boolean) => {\r\n      handleTab(this.key, isInside);\r\n    };\r\n\r\n    const onDestroy = (index: number) => {\r\n      this.listData.splice(index, 1);\r\n      if (!this.listData.length) {\r\n        handleDestroy(this.key);\r\n        return;\r\n      }\r\n      this.constructChildList();\r\n      this.refresh();\r\n    };\r\n\r\n    const onInsertSibling = (sibling: DefaultDataItem, replace: boolean) => {\r\n      handleInsertSiblings(this.key, [sibling], replace);\r\n    };\r\n\r\n    this.childList = [];\r\n    this.listData.forEach((data, index) => {\r\n      const childTarget = new LiComponent({ type: BlockStyleTypes.li, childList: dataListToComponents(data) });\r\n      this.childList.push(childTarget);\r\n      childTarget.mount({ handleInsertSiblings: onInsertSibling, handleEnter: onEnter, handleTab: onTab, handleDestroy: () => onDestroy(index) });\r\n      focusManager.register(this.key, childTarget.detectAnchor);\r\n      this.refresh();\r\n    });\r\n  }\r\n\r\n  // childList -> DOM\r\n  private refresh() {\r\n    (this.ref.current as any).innerHTML = '';\r\n    this.childList.forEach(child => {\r\n      const li = document.createElement('li');\r\n      li.appendChild(child.component);\r\n      this.ref.current?.appendChild(li);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isDragging, connectDragSource, connectDragPreview, connectDropTarget\r\n    } = this.props;\r\n    return connectDropTarget(\r\n      connectDragPreview(\r\n        <div className='blockWrapper'>\r\n          {connectDragSource(<div className='dragIcon'>::</div>)}\r\n          <div className='list'>\r\n            <ul ref={this.ref} style={{ opacity: isDragging ? 0.5 : 1 }} dangerouslySetInnerHTML={{ __html: '' }} />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default dndWrapper<ListProps>(List);\r\n","D:\\workspace\\MEdit\\src\\component\\Block\\Table\\index.tsx",["281"],"import * as React from 'react';\r\nimport { DefaultDataItem } from 'types/ComponentTypes';\r\n\r\nexport interface TableProps {\r\n  handleInsertParagraph: (key: string) => void;\r\n  tableData?: Array<DefaultDataItem[]>;\r\n}\r\n\r\nexport interface TableState {\r\n\r\n}\r\n\r\nclass Table extends React.Component<TableProps, TableState> {\r\n  constructor(props: TableProps) {\r\n    super(props);\r\n    console.log('here');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>table</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;","D:\\workspace\\MEdit\\src\\types\\ComponentTypes.ts",["282","283","284","285","286","287","288","289","290","291","292","293","294","295"],"export enum InlineStyleTypes {\r\n  strong = 'strong',\r\n  em = 'em',\r\n  highlight = 'highlight',\r\n  inlineCode = 'inlineCode',\r\n  del = 'del',\r\n  plainText = 'plainText',\r\n  wbr = 'wbr'\r\n}\r\n\r\nexport enum BlockStyleTypes {\r\n  header = 'header',\r\n  paragragh = 'paragraph',\r\n  quote = 'quote',\r\n  list = 'list',\r\n  li = 'li',\r\n  indentation = 'indentation',\r\n  table = 'table'\r\n}\r\n\r\nexport type HeaderLevelType = 1 | 2 | 3 | 4 | 5 | 6;\r\n\r\nexport interface DefaultDataItem {\r\n  key?: string;\r\n  type: BlockStyleTypes | InlineStyleTypes;\r\n  childList: DefaultDataItem[];\r\n  content?: string;\r\n  tableData?: Array<DefaultDataItem[]>;\r\n  listData?: Array<DefaultDataItem[]>;\r\n  imgData?: string;\r\n  headerLevel?: HeaderLevelType;\r\n\r\n}\r\n","D:\\workspace\\MEdit\\src\\component\\Inline\\Em\\index.ts",["296","297"],"import { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport { InlineStyleTypes } from 'types/ComponentTypes';\r\nimport InlineComponent from '../InlineComponent';\r\n\r\ninterface EmProps extends DefaultComponentProps {\r\n\r\n}\r\n\r\nexport default class Em extends InlineComponent {\r\n  public component: Element;\r\n\r\n  constructor(props: EmProps | DefaultComponentProps) {\r\n    super(props);\r\n    const em = document.createElement('em');\r\n    em.setAttribute('class', 'em');\r\n    this.component = em;\r\n\r\n    this.refresh();\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return `*${this.getContent()}*`;\r\n  }\r\n\r\n  public getContent() {\r\n    return this.childList.reduce((pre, cur) => {\r\n      return pre + (cur as InlineComponent).getContent();\r\n    }, '');\r\n  }\r\n\r\n  public refresh() {\r\n    this.component.innerHTML = '';\r\n    this.childList.forEach(child => {\r\n      this.component.appendChild(child.component);\r\n    });\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\component\\Inline\\Del\\index.ts",["298","299"],"import { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport { InlineStyleTypes } from 'types/ComponentTypes';\r\nimport InlineComponent from '../InlineComponent';\r\n\r\ninterface DelProps extends DefaultComponentProps {\r\n\r\n}\r\n\r\nexport default class Del extends InlineComponent {\r\n  public component: Element;\r\n\r\n  constructor(props: DelProps) {\r\n    super(props);\r\n    this.component = document.createElement('del');\r\n    this.refresh();\r\n  }\r\n\r\n  public refresh() {\r\n    this.component.innerHTML = '';\r\n    this.childList.forEach(child => {\r\n      this.component.appendChild(child.component);\r\n    });\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return `~~${this.getContent()}~~`;\r\n  }\r\n\r\n  public getContent() {\r\n    return this.childList.reduce((pre, cur) => {\r\n      return pre + (cur as InlineComponent).getContent();\r\n    }, '');\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\component\\Inline\\Highlight\\index.ts",["300","301"],"import { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport { InlineStyleTypes } from 'types/ComponentTypes';\r\nimport InlineComponent from '../InlineComponent';\r\nimport './style.scss';\r\n\r\ninterface HighlightProps extends DefaultComponentProps {\r\n\r\n}\r\n\r\nexport default class Highlight extends InlineComponent {\r\n  public component: Element;\r\n\r\n  constructor(props: HighlightProps | DefaultComponentProps) {\r\n    super(props);\r\n    this.component = document.createElement('mark');\r\n    this.refresh();\r\n  }\r\n\r\n  public refresh() {\r\n    this.component.innerHTML = '';\r\n    this.childList.forEach(child => {\r\n      this.component.appendChild(child.component);\r\n    });\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return `==${this.getContent()}==`;\r\n  }\r\n\r\n  public getContent() {\r\n    return this.childList.reduce((pre, cur) => {\r\n      return pre + (cur as InlineComponent).getContent();\r\n    }, '');\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\component\\Inline\\PlainText\\index.ts",["302"],"import { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport EventBus, { BusEventTypes } from 'component/EventBus';\r\nimport { InlineStyleTypes } from 'types/ComponentTypes';\r\nimport InlineComponent, { InlineMountProps } from '../InlineComponent';\r\nimport Wbr from '../Wbr';\r\n\r\ninterface MountedPlainTextProps extends DefaultComponentProps {\r\n  content: string;\r\n}\r\ninterface UnMountedPlainTextProps extends DefaultComponentProps {\r\n  content: string;\r\n}\r\n\r\nexport default class PlainText extends InlineComponent {\r\n  content: string;\r\n\r\n  component: Element;\r\n\r\n  constructor(props: MountedPlainTextProps | UnMountedPlainTextProps) {\r\n    super(props);\r\n    const { content } = props;\r\n    this.content = content;\r\n    this.component = document.createElement('span');\r\n    this.component.appendChild(document.createTextNode(this.content));\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return this.component.innerHTML;\r\n  }\r\n\r\n  public getContent() {\r\n    this.content = this.component.innerHTML;\r\n    return this.content;\r\n  }\r\n\r\n  public getComponent() {\r\n    return this.component;\r\n  }\r\n\r\n  public refresh() {\r\n    this.component.innerHTML = this.content;\r\n  }\r\n\r\n  public setContent(content: string) {\r\n    this.content = content;\r\n    // this.refresh();\r\n    if (content === this.component.innerHTML) {\r\n      return;\r\n    }\r\n    this.refresh();\r\n  }\r\n\r\n  private mountEventBus(eventBus: EventBus) {\r\n    eventBus.subscribe(BusEventTypes.recordAnchor, this.key, () => {\r\n      const selection = document.getSelection();\r\n      if (selection?.anchorNode && this.component.contains(selection.anchorNode)) {\r\n        this.recordAnchor();\r\n      }\r\n      return false;\r\n    });\r\n\r\n    eventBus.subscribe(BusEventTypes.deleteEmpty, this.key, () => {\r\n      if (document.contains(this.component)) return;\r\n      this.destroy();\r\n    });\r\n\r\n    eventBus.subscribe(BusEventTypes.findEnterAnchor, this.key, () => {\r\n      const selection = document.getSelection();\r\n      const content = this.getContent();\r\n      if (!selection?.anchorNode) return;\r\n      // 消除零宽空格的影响\r\n      if (selection.anchorNode instanceof Text && selection.anchorNode.textContent === '\\u200B') {\r\n        selection.anchorNode.remove();\r\n      }\r\n      if (this.component.contains(selection?.anchorNode)) {\r\n        const offset = selection.anchorOffset;\r\n        const curContent = content.slice(0, offset);\r\n        const nextContent = content.slice(offset);\r\n        // this.setContent(curContent);\r\n        this.inlineMountProps?.handleEnter(this.key,\r\n          curContent.length === 0 ? undefined : {\r\n            type: InlineStyleTypes.plainText,\r\n            childList: [],\r\n            content: curContent\r\n          }, nextContent.length === 0 ? undefined : {\r\n            type: InlineStyleTypes.plainText,\r\n            childList: [],\r\n            content: this.getContent().slice(offset)\r\n          });\r\n      }\r\n      // TODO 这里只针对paragraph进行设计，需要进行拓充\r\n      else if (selection?.anchorNode?.nodeName === 'P') {\r\n        this.inlineMountProps?.eventBus.dispatch(BusEventTypes.insertSibling);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public mount(props: InlineMountProps) {\r\n    this.mounted = true;\r\n    this.inlineMountProps = props;\r\n    this.mountEventBus(this.inlineMountProps.eventBus);\r\n  }\r\n\r\n  private recordAnchor() {\r\n    if (!this.mounted) throw new Error('unmount component cannot use this function');\r\n    const selection = document.getSelection();\r\n    if (!selection) throw new Error('selection is null');\r\n    if (!this.component.contains(selection.anchorNode)) {\r\n      console.error(`active node is ${selection.anchorNode} instead of ${this.component}`);\r\n    }\r\n\r\n    this.content = this.component.innerHTML.replace(/&nbsp;/g, ' ').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&amp;/g, '&');\r\n    const offset = selection.anchorOffset;\r\n    const curContent = this.content.slice(0, offset);\r\n    const nextContent = this.content.slice(offset);\r\n    this.setContent(curContent.replace(/\\s/g, '&nbsp;'));\r\n    const wbr = new Wbr({ type: InlineStyleTypes.wbr, childList: [] });\r\n    if (nextContent.length) {\r\n      const sibling = new PlainText({ type: InlineStyleTypes.plainText, childList: [], content: nextContent.replace(/\\s/g, '&nbsp;') });\r\n      this.inlineMountProps!.handleInsertSibling(this.key, [wbr, sibling], !(curContent.length));\r\n    } else {\r\n      this.inlineMountProps!.handleInsertSibling(this.key, [wbr], !(curContent.length));\r\n    }\r\n  }\r\n\r\n  public setAnchor(offset: number = 0) {\r\n    if (!this.mounted) throw new Error('no mount component cannot setAnchor');\r\n    const selection = document.getSelection();\r\n    if (offset === -1) {\r\n      selection?.collapse(this.component, this.getContent.length + 1);\r\n      return;\r\n    }\r\n    selection?.collapse(this.component, offset);\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\component\\Block\\Paragraph\\EventManager.ts",["303","304","305"],"export interface EventManagerProps {\r\n  target: Element;\r\n  handleEnter: () => void;\r\n  handleCtrlEnter: () => void;\r\n  handleDelete: (isKeyDown: boolean) => void;\r\n  handleReParse: () => void;\r\n  handleTab: (isInside: boolean) => void;\r\n\r\n}\r\nexport default class EventManager {\r\n  target: Element;\r\n\r\n  isCtrlPress: boolean;\r\n\r\n  isShiftPress: boolean;\r\n\r\n  isComposing: boolean;\r\n\r\n  onEnter: () => void;\r\n\r\n  onCtrlEnter: () => void;\r\n\r\n  onDelete: (isKeyDown: boolean) => void;\r\n\r\n  reParse: () => void;\r\n\r\n  isInputing: boolean;\r\n\r\n  onTab: (isInside: boolean) => void;\r\n\r\n  constructor(props: EventManagerProps) {\r\n    const { target, handleEnter, handleCtrlEnter, handleDelete, handleReParse, handleTab } = props;\r\n    this.target = target;\r\n    this.onEnter = handleEnter;\r\n    this.onCtrlEnter = handleCtrlEnter;\r\n    this.onDelete = handleDelete;\r\n    this.reParse = handleReParse;\r\n    this.onTab = handleTab;\r\n    this.isComposing = false;\r\n    this.isInputing = false;\r\n    this.isCtrlPress = false;\r\n    this.isShiftPress = false;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.target.addEventListener('keydown', (e: any) => {\r\n      if (e.code === 'ControlLeft') {\r\n        this.isCtrlPress = true;\r\n      } else if (e.code === 'ShiftLeft') {\r\n        this.isShiftPress = true;\r\n      }\r\n\r\n      if (this.isComposing) return;\r\n      if (e.code === 'Backspace' || e.code === 'Delete') {\r\n        // something\r\n        this.onDelete(true);\r\n\r\n      } else if (e.code === 'Enter') {\r\n        e.preventDefault();\r\n        if (this.isCtrlPress) this.onCtrlEnter();\r\n        else this.onEnter();\r\n      } else if (e.code === 'Tab') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.onTab(!this.isShiftPress);\r\n      } else if (e.code === 'KeyS') {\r\n        if (this.isCtrlPress) {\r\n          e.preventDefault();\r\n          const dataList = (window as any).activeEditor.getDataList();\r\n          console.log(dataList);\r\n          (window as any).activeEditor.saveContent();\r\n        }\r\n      }\r\n      console.log(e);\r\n    });\r\n\r\n    this.target.addEventListener('input', (e: InputEventInit) => {\r\n      if (e.inputType?.match(/insert/)) {\r\n        this.isInputing = true;\r\n      }\r\n      if (e.inputType === 'deleteContentForward' || e.inputType === 'deleteContentBackward') {\r\n        console.log('delete trigger');\r\n        this.onDelete(false);\r\n      }\r\n    });\r\n    this.target.addEventListener('compositionstart', (e: InputEventInit) => {\r\n      this.isComposing = true;\r\n    });\r\n    this.target.addEventListener('compositionend', (e: InputEventInit) => {\r\n      this.isComposing = false;\r\n    });\r\n    this.target.addEventListener('keyup', (e: any) => {\r\n      if (e.code === 'ControlLeft') {\r\n        this.isCtrlPress = false;\r\n      } else if (e.code === 'ShiftLeft') {\r\n        this.isShiftPress = false;\r\n      }\r\n\r\n      if (this.isComposing || !this.isInputing) return;\r\n      // 触发解析\r\n      this.reParse();\r\n      this.isInputing = false;\r\n    });\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\component\\Block\\EditableBlock.ts",["306","307","308","309","310","311","312","313","314","315","316","317","318","319","320"],"import DefaultComponent, { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport InlineComponent from 'component/Inline/InlineComponent';\r\nimport PlainText from 'component/Inline/PlainText';\r\nimport Wbr from 'component/Inline/Wbr';\r\nimport { BlockStyleTypes, DefaultDataItem, InlineStyleTypes } from 'types/ComponentTypes';\r\nimport { componentsToDataList } from 'utils/editorTools/componentToData';\r\nimport { dataListToComponents } from 'utils/editorTools/dataToComponent';\r\nimport { getDataList } from 'utils/markdown';\r\nimport EventBus, { BusEventTypes } from '../EventBus';\r\nimport EventManager from './Paragraph/EventManager';\r\n\r\nexport interface BlockMountProps {\r\n  handleInsertSiblings: (components: DefaultDataItem, replace: boolean) => void;\r\n  handleEnter: (key: string, nextChildren: DefaultDataItem[]) => void;\r\n  handleTab: (key: string, isInside: boolean) => void;\r\n  handleDestroy: () => void;\r\n}\r\n\r\nexport default abstract class EditableBlock extends DefaultComponent {\r\n  public eventBus: EventBus;\r\n\r\n  public component: Element;\r\n\r\n  blockMountProps?: BlockMountProps;\r\n\r\n  oneStepToDelete: boolean;\r\n\r\n  doMarkdownParse: boolean;\r\n\r\n  constructor(props: DefaultComponentProps & { component: Element, doMarkdownParse?: boolean }) {\r\n    super(props);\r\n    const { component, doMarkdownParse = true } = props;\r\n    this.doMarkdownParse = doMarkdownParse;\r\n    this.component = component;\r\n    this.component.setAttribute('contenteditable', 'true');\r\n    this.component.setAttribute('style', 'outline: none; margin-top: 4px; margin-bottom: 4px');\r\n    this.eventBus = new EventBus();\r\n    this.oneStepToDelete = false;\r\n    this.eventBus.subscribe(BusEventTypes.insertSibling, this.key, (values?: { dataList?: DefaultDataItem[] }) => {\r\n      const { dataList = [] } = values || {};\r\n      switch (this.type) {\r\n        case BlockStyleTypes.paragragh:\r\n          this.blockMountProps!.handleInsertSiblings({ type: BlockStyleTypes.paragragh, childList: dataList }, false);\r\n          break;\r\n        case BlockStyleTypes.li:\r\n          this.blockMountProps!.handleEnter(this.key, []);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    this.InitEventManager();\r\n    this.refresh();\r\n  }\r\n\r\n  public InitEventManager() {\r\n    const handleEnter = () => {\r\n      this.oneStepToDelete = false;\r\n      this.eventBus.dispatch(BusEventTypes.findEnterAnchor);\r\n    };\r\n\r\n    const handleCtrlEnter = () => {\r\n      this.oneStepToDelete = false;\r\n      this.blockMountProps?.handleInsertSiblings({ type: BlockStyleTypes.paragragh, childList: [] }, false);\r\n    };\r\n\r\n    // component -> childList, 也是原子操作\r\n    const format = () => {\r\n      const childNodes = this.component.childNodes;\r\n      let childIndex = 0;\r\n\r\n      for (let i = 0; i < childNodes.length; i++) {\r\n        const child = childNodes[i];\r\n        if (child !== this.childList[childIndex]?.component) {\r\n          const newChild = new PlainText({ type: InlineStyleTypes.plainText, childList: [], content: child.textContent || '' });\r\n          this.mountChild(newChild);\r\n          this.component.insertBefore(newChild.component, child);\r\n          this.component.removeChild(child);\r\n          this.childList.splice(childIndex, 0, newChild);\r\n        }\r\n        childIndex += 1;\r\n      }\r\n    };\r\n\r\n    // 为了在paragraph为空时监听delelte，设置了input和keydown两个监听器\r\n    const handleDelete = (isKeyDown: boolean) => {\r\n      if (isKeyDown) {\r\n        if (this.oneStepToDelete) {\r\n          this.destroy();\r\n        }\r\n        return;\r\n      }\r\n      this.eventBus.dispatch(BusEventTypes.deleteEmpty);\r\n      // this.eventBus.dispatch(BusEventTypes.recordAnchor, {}, true);\r\n      // this.parseAnchor();\r\n      // console.log('after parseAnchor , the component: ', this.component.innerHTML);\r\n      if (!this.childList.length) {\r\n        console.log('handle empty paragraph~~');\r\n        if (this.oneStepToDelete) {\r\n          this.destroy();\r\n        } else {\r\n          this.oneStepToDelete = true;\r\n        }\r\n      }\r\n    };\r\n\r\n    // 消除零宽空格\r\n    const removeNoWidthSpace = () => {\r\n      const func = (node: Node) => {\r\n        if (node instanceof Text && node.textContent?.match(/\\u200B/u)) {\r\n          const content = node.textContent;\r\n          if (content === '\\u200B') {\r\n            node.remove();\r\n          }\r\n          return;\r\n        }\r\n        node.childNodes.forEach(child => func(child));\r\n      };\r\n      func(this.component);\r\n    };\r\n\r\n    const BlockTrans = (md: string) => {\r\n      if (md.replace('<wbr>', '') === '-&nbsp;') {\r\n        this.blockMountProps!.handleInsertSiblings({ type: BlockStyleTypes.list, childList: [] }, true);\r\n        return true;\r\n      } \r\n      if (md.replace('<wbr>', '') === '&gt;&nbsp;') {\r\n        this.blockMountProps!.handleInsertSiblings({ type: BlockStyleTypes.quote, childList: [] }, true);\r\n        return true;\r\n      } \r\n      if (md.replace('<wbr>', '').match(/^(#{1,6})&nbsp;$/)) {\r\n        const level = (md.replace('<wbr>', '').match(/^(#{1,6})&nbsp;$/) as any)[1].length;\r\n        this.blockMountProps!.handleInsertSiblings({ type: BlockStyleTypes.header, childList: [], headerLevel:level }, true);\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    // 核心逻辑\r\n    const handleReParse = () => {\r\n      this.oneStepToDelete = false;\r\n      removeNoWidthSpace();\r\n      this.eventBus.dispatch(BusEventTypes.recordAnchor, {}, true, () => {\r\n        const wbr = new Wbr({ type: InlineStyleTypes.wbr, childList: [] });\r\n        this.mountChild(wbr);\r\n        this.childList.push(wbr);\r\n        this.component.appendChild(wbr.component);\r\n      });\r\n      format();\r\n      if (this.doMarkdownParse) {\r\n        const md = this.getMarkdown().replace('\\u200B', '');\r\n        console.log('md: ', md);\r\n\r\n        if (this.type === BlockStyleTypes.paragragh && BlockTrans(md)) return;\r\n\r\n        const dataList = getDataList(md);\r\n        // console.log('dataList: ', dataList);\r\n        this.setChildList(dataList);\r\n      }\r\n      this.eventBus.dispatch(BusEventTypes.parseAnchor, {}, true);\r\n      // console.log('after parseAnchor , the component: ', this.component.innerHTML);\r\n      this.eventBus.dispatch(BusEventTypes.showMarkdown, { show: true });\r\n    };\r\n\r\n    const handleTab = (isInside: boolean) => {\r\n      if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n      this.blockMountProps!.handleTab(this.key, isInside);\r\n    };\r\n\r\n    const em = new EventManager({ target: this.component, handleEnter, handleCtrlEnter, handleDelete, handleReParse, handleTab });\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return this.childList.reduce((pre, cur) => {\r\n      return pre + cur.getMarkdown();\r\n    }, '');\r\n  }\r\n\r\n  public getPosition = (): [number, number] => {\r\n    return [this.component.clientTop, this.component.clientHeight + this.component.clientTop];\r\n  };\r\n\r\n  public onChildInsertSibling = (key: string, siblings: DefaultComponent[], replace: boolean) => {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    const index = this.findChildIndex(key);\r\n    if (replace) {\r\n      const newList = this.childList.slice();\r\n      newList.splice(index, 1, ...siblings);\r\n      this.setChildList(newList);\r\n    } else {\r\n      const newList = this.childList.slice();\r\n      newList.splice(index + 1, 0, ...siblings);\r\n      this.setChildList(newList);\r\n    }\r\n  };\r\n\r\n  public detectAnchor = (): boolean => {\r\n    const selection = document.getSelection();\r\n    if (this.component.contains(selection?.anchorNode || null)) {\r\n      if (!this.showMarkdown) {\r\n        this.showMarkdown = true;\r\n        this.eventBus.dispatch(BusEventTypes.showMarkdown, { show: true });\r\n      }\r\n      return true;\r\n    }\r\n    // eslint-disable-next-line\r\n    else {\r\n      if (this.showMarkdown) {\r\n        this.showMarkdown = false;\r\n        this.eventBus.dispatch(BusEventTypes.showMarkdown, { show: false });\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n\r\n  public appendChild(child: InlineComponent) {\r\n    this.setChildList([...this.childList, child]);\r\n  }\r\n\r\n  // 原子操作，不涉及setChildList\r\n  public destroyChild(key: string) {\r\n    console.log('destroy: ', key);\r\n    const index = this.findChildIndex(key);\r\n    this.childList.splice(index, 1);\r\n    this.eventBus.remove(key);\r\n    const childNode = this.component.childNodes[index];\r\n    if (childNode && this.component.contains(childNode))\r\n      this.component.removeChild(this.component.childNodes[index]);\r\n  }\r\n\r\n  public destroy = () => {\r\n    this.blockMountProps?.handleDestroy();\r\n  };\r\n\r\n  // childList -> component\r\n  public setChildList(childList: DefaultComponent[] | DefaultDataItem[]) {\r\n    diff(this, childList);\r\n  }\r\n\r\n  public setAnchor(offset: number) {\r\n    const selection = document.getSelection();\r\n    if (offset === 0) {\r\n      selection?.collapse(this.component, 0);\r\n    } else if (offset === -1) {\r\n      selection?.collapse(this.component);\r\n    }\r\n  }\r\n\r\n  private onChildEnter(key: string, _cur?: DefaultDataItem, _next?: DefaultDataItem) {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    const index = this.findChildIndex(key);\r\n    const curDataList = componentsToDataList(this.childList.slice(0, index) as InlineComponent[]);\r\n    const nextDataList = componentsToDataList(this.childList.slice(index + 1) as InlineComponent[]);\r\n    _cur && curDataList.push(_cur);\r\n    _next && nextDataList.unshift(_next);\r\n    this.setChildList(curDataList);\r\n    this.blockMountProps!.handleEnter(this.key, nextDataList);\r\n  }\r\n\r\n  private onChildDestroy(key: string) {\r\n    console.log('the key to destroy: ', key);\r\n    const index = this.childList.findIndex(child => child.key === key);\r\n    const newList = this.childList.slice();\r\n    newList.splice(index, 1);\r\n    this.setChildList(newList);\r\n\r\n    // this.component.removeChild(this.component.childNodes[index]);\r\n  }\r\n\r\n  public mountChild(child: InlineComponent) {\r\n    const that = this;\r\n    child.mount({\r\n      eventBus: this.eventBus,\r\n      handleEnter: this.onChildEnter.bind(that),\r\n      handleDestroy: this.onChildDestroy.bind(that),\r\n      handleInsertSibling: this.onChildInsertSibling.bind(that)\r\n    });\r\n  }\r\n\r\n  public mount(props: BlockMountProps) {\r\n    this.mounted = true;\r\n    this.blockMountProps = props;\r\n    this.childList.forEach(child => {\r\n      this.mountChild(child as InlineComponent);\r\n    });\r\n  }\r\n\r\n  abstract refresh(): void;\r\n\r\n}\r\n\r\n// 针对inlineComponent的diff算法\r\nexport function diff(root: DefaultComponent, DataTree: (DefaultDataItem | DefaultComponent)[]): DefaultComponent {\r\n  console.log('==========diff start');\r\n  console.log(' -- root.innerHTML: ', root.component.innerHTML);\r\n  console.log(' -- root.childList: ');\r\n  root.childList.forEach(child => {\r\n    console.log(child.type, (child as PlainText).content);\r\n    if (child.childList.length) {\r\n      child.childList.forEach(c => console.log(c.type, (c as PlainText).content));\r\n    }\r\n  });\r\n  console.log(' -- DataTree: ', DataTree.length, DataTree);\r\n  const componentTree = root.childList;\r\n  let lastIndex = 0;\r\n  let resultList: Array<number> = [];\r\n  DataTree.forEach((item: DefaultDataItem | DefaultComponent) => {\r\n    let flag = false;\r\n    for (let i = lastIndex; i < componentTree.length; i++) {\r\n      if (item.type === componentTree[i].type) {\r\n        if (item.type === InlineStyleTypes.plainText) {\r\n          (componentTree[i] as PlainText).setContent(item instanceof DefaultComponent ? (item as PlainText).content : item.content || '');\r\n        } else if (componentTree[i].childList.length || item.childList.length) {\r\n          diff(componentTree[i], item.childList);\r\n        }\r\n        resultList.push(i);\r\n        lastIndex = i + 1;\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!flag) {\r\n      console.log('insert new component: ', item);\r\n      if (item instanceof DefaultComponent) {\r\n        root.mountChild(item);\r\n        componentTree.splice(lastIndex, 0, item as DefaultComponent);\r\n        root.component.insertBefore(item.component, root.component.childNodes[lastIndex]);\r\n        resultList.push(lastIndex);\r\n        lastIndex += 1;\r\n      } else {\r\n        const component: InlineComponent = dataListToComponents([item])[0];\r\n        root.mountChild(component);\r\n        componentTree.splice(lastIndex, 0, component);\r\n        root.component.insertBefore(component.component, root.component.childNodes[lastIndex]);\r\n        resultList.push(lastIndex);\r\n        lastIndex += 1;\r\n      }\r\n    }\r\n  });\r\n  resultList.push(Math.max(componentTree.length, DataTree.length));\r\n  resultList = resultList.reverse();\r\n  resultList.push(-1);\r\n  resultList.reduce((pre: number, cur: number): number => {\r\n    if (pre - cur > 1) {\r\n      for (let i = pre - 1; i > cur; i--) {\r\n        console.log('destroy: ', i, componentTree[i]);\r\n        if (componentTree[i]) {\r\n          root.destroyChild(componentTree[i].key);\r\n        }\r\n      }\r\n    }\r\n    return cur;\r\n  });\r\n  console.log('==========diff end');\r\n  return root;\r\n}","D:\\workspace\\MEdit\\src\\component\\Block\\dndWrapper.tsx",[],"D:\\workspace\\MEdit\\src\\containers\\header\\index.tsx",[],"D:\\workspace\\MEdit\\src\\containers\\header\\HeaderMenu.tsx",["321","322","323","324","325","326","327","328"],"import * as React from 'react';\r\nimport api from 'utils/api';\r\nimport { Button, Checkbox, Dropdown, Form, Input, Menu, Modal, Select, Tabs } from 'antd';\r\nimport { MoreOutlined, LoginOutlined, DownloadOutlined, ConsoleSqlOutlined, LogoutOutlined } from '@ant-design/icons';\r\nimport notify, { notifyType } from 'utils/notify';\r\nimport { fileDownload } from 'utils/download';\r\nimport fontFamilyIcon from 'asset/svg/font-family.svg';\r\nimport store from 'store';\r\nimport { ActionTypes } from 'types/storeTypes';\r\n\r\nconst { Option } = Select;\r\nconst { SubMenu } = Menu;\r\nconst { TabPane } = Tabs;\r\n\r\nconst LoginModal = (props: { visible: boolean, handleCancle: () => void }) => {\r\n  const { visible, handleCancle } = props;\r\n  const [signInForm] = Form.useForm();\r\n  const handleLogin = async (values: any) => {\r\n    handleCancle();\r\n    const res = await api.login(values.userName, values.password);\r\n    if (res.status === 200) {\r\n      const { userName } = res.data;\r\n      notify(notifyType.loginSuccessful);\r\n      store.dispatch({ type: ActionTypes.login, userName });\r\n    }\r\n  };\r\n  const handleRegister = async (values: any) => {\r\n    handleCancle();\r\n    const res = await api.register(values.userName, values.password);\r\n    if (res.status === 200) {\r\n      const message = res.data;\r\n      notify(notifyType.registerSuccessful);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal visible={visible} onCancel={handleCancle} footer={null}>\r\n      <Tabs defaultActiveKey='1'>\r\n        <TabPane tab='登录' key='1'>\r\n          <Form\r\n            labelCol={{ span: 6 }}\r\n            wrapperCol={{ span: 16 }}\r\n            name=\"basic\"\r\n            initialValues={{ remember: true }}\r\n            onFinish={handleLogin}\r\n          >\r\n            <Form.Item\r\n              label=\"UserName\"\r\n              name=\"userName\"\r\n              rules={[{ required: true, message: '请输入你的用户名' }]}\r\n            >\r\n              <Input type='text' />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[{ required: true, message: '请输入你的密码' }]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{ offset: 6, span: 16 }} name=\"remember\" valuePropName=\"checked\">\r\n              <Checkbox>Remember me</Checkbox>\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{ offset: 18, span: 16 }}>\r\n              <Button type='primary' htmlType='submit'>submit</Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </TabPane>\r\n\r\n        <TabPane tab='注册' key='2'>\r\n          <Form\r\n            labelCol={{ span: 6 }}\r\n            wrapperCol={{ span: 16 }}\r\n            name=\"basic\"\r\n            onFinish={handleRegister}\r\n            form={signInForm}\r\n          >\r\n            <Form.Item\r\n              label=\"UserName\"\r\n              name=\"userName\"\r\n              rules={[{ required: true, message: '请输入你的用户名' }, { min: 4, message: '用户名不能少于4个字符' }]}\r\n            >\r\n              <Input type='text' />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              rules={[{ required: true, message: '请输入你的密码' }, { min: 4, message: '密码不能少于4个字符' }, {\r\n                pattern: /^(?:[0-9]|[a-z]|[A-Z])+$/, message: '密码只能由大小写字母和数字组成'\r\n              }]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Password Again\"\r\n              name=\"passwordAgain\"\r\n              rules={[{ required: true, message: 'Please input your password again!' }, {\r\n                validator: (rule, value, callback) => {\r\n                  const { getFieldValue } = signInForm;\r\n                  if (value && value !== getFieldValue('password')) {\r\n                    callback('两次输入不一致！');\r\n                  }\r\n                  callback();\r\n                }\r\n              }]}\r\n            >\r\n              <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{ offset: 18, span: 16 }}>\r\n              <Button type='primary' htmlType='submit'>submit</Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </TabPane>\r\n      </Tabs>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst ExporModal = (props: { visible: boolean, handleCancle: () => void }) => {\r\n  const { visible, handleCancle } = props;\r\n\r\n  const hanldeExport = (values: any) => {\r\n    handleCancle();\r\n    if (values.format === 'pdf') {\r\n      setTimeout(() => window.print(), 66.7);\r\n      return;\r\n    }\r\n    const md = (window as any).activeEditor?.getMarkdown();\r\n    console.log(md);\r\n    fileDownload('file', md);\r\n  };\r\n\r\n  return (\r\n    <Modal title='导出' visible={visible} onCancel={handleCancle} footer={null}>\r\n      <Form\r\n        onFinish={hanldeExport}\r\n      >\r\n        <Form.Item\r\n          labelCol={{ span: 6 }}\r\n          wrapperCol={{ span: 16 }}\r\n          label='导出格式'\r\n          name='format'\r\n          initialValue='pdf'\r\n        >\r\n          <Select>\r\n            <Option value='pdf'>pdf</Option>\r\n            <Option value='markdown'>markdown</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{ offset: 18, span: 16 }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>submit</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst handleChangeFont = (type: string) => {\r\n  const body = document.getElementsByTagName('body')[0];\r\n  switch (type) {\r\n    case 'default':\r\n      body.setAttribute('style', 'font-family: Times New Roman');\r\n      break;\r\n    case 'songti':\r\n      body.setAttribute('style', 'font-family: 宋体');\r\n\r\n      break;\r\n    case 'kaiti':\r\n      body.setAttribute('style', 'font-family: 楷体');\r\n\r\n      break;\r\n    case 'shoujin':\r\n      // eslint-disable-next-line\r\n      require('./fontFace/shoujin.scss');\r\n      body.setAttribute('style', 'font-family: shoujin');\r\n      break;\r\n    case 'shouxie':\r\n      // eslint-disable-next-line\r\n      require('./fontFace/shouxie.scss');\r\n      body.setAttribute('style', 'font-family: shouxie');\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\nexport default () => {\r\n  const [showLoginModal, setShowLoginModal] = React.useState(false);\r\n  const [showExportModal, setShowExportModal] = React.useState(false);\r\n  const [userName, setUserName] = React.useState(store.getState().userName);\r\n  const [form] = Form.useForm();\r\n\r\n  store.subscribe(() => {\r\n    const { userName: user } = store.getState();\r\n    if (userName !== user) {\r\n      setUserName(user);\r\n    }\r\n  });\r\n\r\n  const menu = React.useMemo(() => (\r\n    <Menu>\r\n      {userName ?\r\n        <Menu.Item icon={<LogoutOutlined />} onClick={() => store.dispatch({ type: ActionTypes.login, userName: undefined })}>\r\n          {`登出${userName}`}\r\n        </Menu.Item> :\r\n        <Menu.Item icon={<LoginOutlined />} onClick={() => setShowLoginModal(true)}>\r\n          登录\r\n        </Menu.Item>}\r\n      <Menu.Item icon={<DownloadOutlined />} onClick={() => setShowExportModal(true)}>\r\n        导出\r\n      </Menu.Item>\r\n      <SubMenu icon={(<img className='icon-svg' src={fontFamilyIcon} alt='icon' />)} title='更换字体'>\r\n        <Menu.Item onClick={() => handleChangeFont('default')}>\r\n          默认\r\n        </Menu.Item>\r\n        <Menu.Item onClick={() => handleChangeFont('kaiti')}>\r\n          楷体\r\n        </Menu.Item>\r\n        <Menu.Item onClick={() => handleChangeFont('songti')}>\r\n          宋体\r\n        </Menu.Item>\r\n        <Menu.Item onClick={() => handleChangeFont('shoujin')}>\r\n          瘦金体\r\n        </Menu.Item>\r\n        <Menu.Item onClick={() => handleChangeFont('shouxie')}>\r\n          手写体\r\n        </Menu.Item>\r\n      </SubMenu>\r\n    </Menu>\r\n  ), [userName]);\r\n\r\n  return (\r\n    <div className='headerMenu'>\r\n      <Dropdown overlay={menu} trigger={['click']}>\r\n        <MoreOutlined className='antd-icon' />\r\n      </Dropdown>\r\n      <LoginModal visible={showLoginModal} handleCancle={() => setShowLoginModal(false)} />\r\n      <ExporModal visible={showExportModal} handleCancle={() => setShowExportModal(false)} />\r\n    </div>\r\n  );\r\n};","D:\\workspace\\MEdit\\src\\utils\\editorTools\\FocusManager.ts",["329","330"],"/**\r\n * FocusManager是用来根据全局光标位置控制showmarkdown变量的\r\n * 同时还兼顾选中一个或多个块状组件时的逻辑\r\n */\r\nexport interface FocusManagerProps {\r\n  rootRef: React.RefObject<HTMLDivElement>;\r\n}\r\nexport default class FocusManager {\r\n  public rootRef: React.RefObject<HTMLDivElement>;\r\n\r\n  private inited: boolean = false;\r\n\r\n  public componentList: { key: string, detectAnchor: () => boolean }[];\r\n\r\n  constructor(props: FocusManagerProps) {\r\n    const { rootRef } = props;\r\n    this.rootRef = rootRef;\r\n    // just EditableBlock\r\n    this.componentList = [];\r\n    this.init();\r\n  }\r\n\r\n  public init() {\r\n    if (!this.rootRef.current) return;\r\n    if (this.inited) return;\r\n    this.rootRef.current!.addEventListener('click', e => {\r\n      let flag = false;\r\n      this.componentList.forEach(component => {\r\n        if (component.detectAnchor()) flag = true;\r\n      });\r\n      if (!flag) console.error('cannot find anchor');\r\n    });\r\n\r\n    this.rootRef.current!.addEventListener('keydown', e => {\r\n      if (e.code === 'ArrowUp' || e.code === 'ArrowDown' || e.code === 'ArrowLeft' || e.code === 'ArrowRight') {\r\n        let flag = false;\r\n        this.componentList.forEach(component => {\r\n          if (component.detectAnchor()) flag = true;\r\n        });\r\n        if (!flag) console.error('cannot find anchor');\r\n      }\r\n    });\r\n  }\r\n\r\n  public reRank() {\r\n\r\n  }\r\n\r\n  public register(key: string, detectAnchor: () => boolean) {\r\n    this.componentList.push({ key, detectAnchor });\r\n    this.reRank();\r\n  }\r\n\r\n  public remove() {\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}","D:\\workspace\\MEdit\\src\\utils\\editorTools\\getKey.ts",[],"D:\\workspace\\MEdit\\src\\utils\\editorTools\\dataToComponent.ts",[],"D:\\workspace\\MEdit\\src\\utils\\editorTools\\componentToData.ts",[],"D:\\workspace\\MEdit\\src\\utils\\notify\\index.ts",["331","332","333","334","335","336","337","338","339"],"import { notification } from 'antd';\r\n\r\nexport enum notifyType {\r\n  diy = '',\r\n  loginSuccessful = '登录成功.修改将定期自动保存',\r\n  loginFailed = '登录失败.请检查网络并重试',\r\n  registerSuccessful = '注册成功.请重新登录',\r\n  registerFailed = '注册失败.请检查网络并重试',\r\n  addArticleSuccessful = '成功.成功添加新文件',\r\n  addArticleFailed = '失败.添加新文件失败',\r\n  updateArticleSuccessful = '成功.成功修改文章',\r\n  updateArticleFailed = '失败.修改文章失败'\r\n}\r\n\r\nconst notify = (type: notifyType, message?:string) => {\r\n  if (type === notifyType.diy)\r\n    return notification.open({\r\n      message: '服务器错误',\r\n      description: message,\r\n      duration: 1.5\r\n    });\r\n  return notification.open({\r\n    message: type.split('.')[0],\r\n    description: type.split('.')[1],\r\n    duration: 1.5\r\n  });\r\n};\r\n\r\nexport default notify;","D:\\workspace\\MEdit\\src\\utils\\api\\index.ts",["340","341"],"const axios = require('axios');\r\n\r\naxios.defaults.withCredentials = true;\r\nconst path = 'http://127.0.0.1:8888';\r\n// const path = 'http://39.96.29.41:8888';\r\nconsole.log(axios.defaults);\r\nexport default {\r\n  register: async (userName: string, password: string) => {\r\n    const api = `${path}/register?userName=${userName}&password=${password}`;\r\n    return axios.get(api);\r\n  },\r\n  login: async (userName: string, password: string) => {\r\n    const api = `${path}/login`;\r\n    const values = {\r\n      userName,\r\n      password\r\n    };\r\n    return axios.post(api, values);\r\n  },\r\n  getArticle: (title: string) => {\r\n    const api = `${path}/getArticleContentByTiTle?title=${title}`;\r\n    return axios.get(api);\r\n  },\r\n  getArticleTitles: () => {\r\n    const api = `${path}/getArticleTitles`;\r\n    return axios.get(api);\r\n  },\r\n  addArticle: (title: string) => {\r\n    const api = `${path}/addArticle?title=${title}`;\r\n    return axios.get(api);\r\n  },\r\n  saveArticle: (title: string, content: string) => {\r\n    const api = `${path}/saveArticle?title=${title}&content=${content}`;\r\n    return axios.get(api);\r\n  }\r\n};","D:\\workspace\\MEdit\\src\\utils\\download\\index.ts",[],"D:\\workspace\\MEdit\\src\\component\\Block\\Quote\\index.tsx",["342","343","344","345","346","347"],"import React, { RefObject } from 'react';\r\nimport DefaultComponent, { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport PlainText from 'component/Inline/PlainText';\r\nimport { BlockStyleTypes, DefaultDataItem, InlineStyleTypes } from 'types/ComponentTypes';\r\nimport { dataListToComponents } from 'utils/editorTools/dataToComponent';\r\nimport EditableBlock from '../EditableBlock';\r\nimport dndWrapper from '../dndWrapper';\r\nimport './style.scss';\r\nimport { defaultBlockProps } from '../types';\r\n\r\nexport class QuoteComponent extends EditableBlock {\r\n  constructor(props: DefaultComponentProps) {\r\n    super({ ...props, component: document.createElement('p') });\r\n    this.doMarkdownParse = false;\r\n  }\r\n\r\n  public refresh() {\r\n    this.component.innerHTML = '';\r\n    this.childList.forEach(child => {\r\n      this.component.appendChild(child.component);\r\n    });\r\n  }\r\n\r\n  public clone(childList: DefaultComponent[] = []) {\r\n    throw new Error('cannot use this function');\r\n\r\n  }\r\n\r\n  static createDefault = () => {\r\n    throw new Error('cannot use this function');\r\n  };\r\n\r\n}\r\n\r\n\r\nexport interface QuoteProps extends defaultBlockProps {\r\n  [propName: string]: any;\r\n}\r\n\r\nclass Quote extends React.Component<QuoteProps> {\r\n  target: QuoteComponent;\r\n\r\n  ref: RefObject<HTMLDivElement>;\r\n\r\n  key: string;\r\n\r\n  constructor(props: QuoteProps) {\r\n    super(props);\r\n    this.ref = React.createRef();\r\n    const { id, mountValues } = props;\r\n    const { childList, handleTab, handleInsertSiblings, handleDestroy, focusManager } = mountValues;\r\n    this.key = id;\r\n    const onParagraphInsertSibling = (sibling: DefaultDataItem, replace: boolean) => {\r\n      handleInsertSiblings(this.key, [sibling], replace);\r\n    };\r\n\r\n    const onEnter = (key: string, nextChildren: DefaultDataItem[]) => {\r\n      handleInsertSiblings(this.key, [{ type: BlockStyleTypes.paragragh, childList: nextChildren }], false);\r\n    };\r\n\r\n    const onTab = (key: string, isInside: boolean) => {\r\n      handleTab(this.key, isInside);\r\n    };\r\n\r\n    const onDestroy = () => {\r\n      console.log('destroy!!!!!!!!!!!!!!!!!!!!!');\r\n      handleDestroy(this.key);\r\n    };\r\n\r\n    this.target = new QuoteComponent({\r\n      type: BlockStyleTypes.paragragh, childList: dataListToComponents(childList)\r\n    });\r\n    this.target.mount({ handleInsertSiblings: onParagraphInsertSibling, handleEnter: onEnter, handleTab: onTab, handleDestroy: onDestroy });\r\n    focusManager.register(this.key, this.target.detectAnchor);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refresh();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.refresh();\r\n  }\r\n\r\n  public getDataList() {\r\n    return this.target.getDataList();\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return `> ${this.target.getMarkdown()}`;\r\n  }\r\n\r\n  public transToDataItem(): DefaultDataItem {\r\n    return {\r\n      type: BlockStyleTypes.quote,\r\n      childList: this.getDataList()\r\n    };\r\n  }\r\n\r\n\r\n\r\n  private refresh() {\r\n    this.ref.current!.appendChild(this.target.component);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      // 这些 props 由 React DnD注入，参考`collect`函数定义\r\n      isDragging, connectDragSource, connectDragPreview, connectDropTarget\r\n    } = this.props;\r\n    return connectDropTarget(\r\n      connectDragPreview(\r\n        <div className='blockWrapper'>\r\n          {connectDragSource(<div className='dragIcon'>::</div>)}\r\n          <div className='quote' style={{ opacity: isDragging ? 0.5 : 1 }} ref={this.ref} dangerouslySetInnerHTML={{ __html: '' }} />\r\n        </div>\r\n\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default dndWrapper<QuoteProps>(Quote);","D:\\workspace\\MEdit\\src\\store\\index.ts",[],"D:\\workspace\\MEdit\\src\\types\\storeTypes.ts",["348","349"],"export enum ActionTypes {\r\n  login = 'login',\r\n  changeArticle = 'changeArticle'\r\n}",{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"365","line":38,"column":7,"nodeType":"366","messageId":"367","endLine":38,"endColumn":28},{"ruleId":"368","severity":1,"message":"365","line":38,"column":7,"nodeType":"366","messageId":"367","endLine":38,"endColumn":28},{"ruleId":"369","severity":1,"message":"370","line":44,"column":7,"nodeType":"371","messageId":"372","endLine":44,"endColumn":18},{"ruleId":"373","severity":1,"message":"374","line":50,"column":6,"nodeType":"375","endLine":50,"endColumn":16,"suggestions":"376"},{"ruleId":"369","severity":1,"message":"370","line":53,"column":5,"nodeType":"371","messageId":"372","endLine":53,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":56,"column":7,"nodeType":"371","messageId":"372","endLine":56,"endColumn":18},{"ruleId":"369","severity":1,"message":"370","line":58,"column":7,"nodeType":"371","messageId":"372","endLine":58,"endColumn":18},{"ruleId":"369","severity":1,"message":"370","line":62,"column":7,"nodeType":"371","messageId":"372","endLine":62,"endColumn":18},{"ruleId":"364","severity":1,"message":"377","line":3,"column":26,"nodeType":"366","messageId":"367","endLine":3,"endColumn":45},{"ruleId":"368","severity":1,"message":"377","line":3,"column":26,"nodeType":"366","messageId":"367","endLine":3,"endColumn":45},{"ruleId":"369","severity":1,"message":"370","line":53,"column":9,"nodeType":"371","messageId":"372","endLine":53,"endColumn":20},{"ruleId":"373","severity":1,"message":"378","line":64,"column":6,"nodeType":"375","endLine":64,"endColumn":8,"suggestions":"379"},{"ruleId":"350","replacedBy":"380"},{"ruleId":"352","replacedBy":"381"},{"ruleId":"382","replacedBy":"383"},{"ruleId":"354","replacedBy":"384"},{"ruleId":"356","replacedBy":"385"},{"ruleId":"358","replacedBy":"386"},{"ruleId":"360","replacedBy":"387"},{"ruleId":"362","replacedBy":"388"},{"ruleId":"373","severity":1,"message":"378","line":14,"column":6,"nodeType":"375","endLine":14,"endColumn":8,"suggestions":"389"},{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"362","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"390","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":26},{"ruleId":"368","severity":1,"message":"390","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":26},{"ruleId":"364","severity":1,"message":"391","line":3,"column":10,"nodeType":"366","messageId":"367","endLine":3,"endColumn":25},{"ruleId":"368","severity":1,"message":"391","line":3,"column":10,"nodeType":"366","messageId":"367","endLine":3,"endColumn":25},{"ruleId":"364","severity":1,"message":"390","line":3,"column":44,"nodeType":"366","messageId":"367","endLine":3,"endColumn":60},{"ruleId":"368","severity":1,"message":"390","line":3,"column":44,"nodeType":"366","messageId":"367","endLine":3,"endColumn":60},{"ruleId":"392","severity":1,"message":"393","line":16,"column":3,"nodeType":"394","messageId":"395","endLine":18,"endColumn":4},{"ruleId":"369","severity":1,"message":"370","line":30,"column":7,"nodeType":"371","messageId":"372","endLine":30,"endColumn":18},{"ruleId":"369","severity":1,"message":"370","line":52,"column":5,"nodeType":"371","messageId":"372","endLine":52,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":100,"column":5,"nodeType":"371","messageId":"372","endLine":100,"endColumn":16},{"ruleId":"364","severity":1,"message":"396","line":7,"column":8,"nodeType":"366","messageId":"367","endLine":7,"endColumn":20},{"ruleId":"368","severity":1,"message":"396","line":7,"column":8,"nodeType":"366","messageId":"367","endLine":7,"endColumn":20},{"ruleId":"364","severity":1,"message":"397","line":13,"column":10,"nodeType":"366","messageId":"367","endLine":13,"endColumn":21},{"ruleId":"368","severity":1,"message":"397","line":13,"column":10,"nodeType":"366","messageId":"367","endLine":13,"endColumn":21},{"ruleId":"369","severity":1,"message":"370","line":233,"column":7,"nodeType":"371","messageId":"372","endLine":233,"endColumn":18},{"ruleId":"369","severity":1,"message":"370","line":255,"column":7,"nodeType":"371","messageId":"372","endLine":255,"endColumn":18},{"ruleId":"369","severity":1,"message":"370","line":261,"column":5,"nodeType":"371","messageId":"372","endLine":261,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":291,"column":5,"nodeType":"371","messageId":"372","endLine":291,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":297,"column":5,"nodeType":"371","messageId":"372","endLine":297,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":75,"column":7,"nodeType":"371","messageId":"372","endLine":75,"endColumn":18},{"ruleId":"398","severity":1,"message":"399","line":122,"column":95,"nodeType":"400","messageId":"401","endLine":122,"endColumn":135},{"ruleId":"364","severity":1,"message":"402","line":2,"column":3,"nodeType":"366","messageId":"367","endLine":2,"endColumn":10},{"ruleId":"364","severity":1,"message":"403","line":3,"column":3,"nodeType":"366","messageId":"367","endLine":3,"endColumn":15},{"ruleId":"364","severity":1,"message":"404","line":4,"column":3,"nodeType":"366","messageId":"367","endLine":4,"endColumn":14},{"ruleId":"364","severity":1,"message":"405","line":5,"column":3,"nodeType":"366","messageId":"367","endLine":5,"endColumn":15},{"ruleId":"364","severity":1,"message":"406","line":6,"column":3,"nodeType":"366","messageId":"367","endLine":6,"endColumn":14},{"ruleId":"364","severity":1,"message":"407","line":7,"column":3,"nodeType":"366","messageId":"367","endLine":7,"endColumn":18},{"ruleId":"364","severity":1,"message":"408","line":8,"column":3,"nodeType":"366","messageId":"367","endLine":8,"endColumn":14},{"ruleId":"364","severity":1,"message":"409","line":9,"column":3,"nodeType":"366","messageId":"367","endLine":9,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":28,"column":7,"nodeType":"371","messageId":"372","endLine":28,"endColumn":20},{"ruleId":"369","severity":1,"message":"370","line":42,"column":9,"nodeType":"371","messageId":"372","endLine":42,"endColumn":22},{"ruleId":"364","severity":1,"message":"410","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":17},{"ruleId":"368","severity":1,"message":"410","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":17},{"ruleId":"364","severity":1,"message":"411","line":6,"column":10,"nodeType":"366","messageId":"367","endLine":6,"endColumn":30},{"ruleId":"368","severity":1,"message":"411","line":6,"column":10,"nodeType":"366","messageId":"367","endLine":6,"endColumn":30},{"ruleId":"369","severity":1,"message":"370","line":21,"column":5,"nodeType":"371","messageId":"372","endLine":21,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":61,"column":5,"nodeType":"371","messageId":"372","endLine":61,"endColumn":16},{"ruleId":"364","severity":1,"message":"412","line":65,"column":13,"nodeType":"366","messageId":"367","endLine":65,"endColumn":22},{"ruleId":"368","severity":1,"message":"412","line":65,"column":13,"nodeType":"366","messageId":"367","endLine":65,"endColumn":22},{"ruleId":"369","severity":1,"message":"370","line":79,"column":7,"nodeType":"371","messageId":"372","endLine":79,"endColumn":18},{"ruleId":"398","severity":1,"message":"399","line":126,"column":92,"nodeType":"400","messageId":"401","endLine":126,"endColumn":132},{"ruleId":"369","severity":1,"message":"370","line":15,"column":5,"nodeType":"371","messageId":"372","endLine":15,"endColumn":16},{"ruleId":"350","replacedBy":"413"},{"ruleId":"352","replacedBy":"414"},{"ruleId":"382","replacedBy":"415"},{"ruleId":"354","replacedBy":"416"},{"ruleId":"356","replacedBy":"417"},{"ruleId":"358","replacedBy":"418"},{"ruleId":"360","replacedBy":"419"},{"ruleId":"362","replacedBy":"420"},{"ruleId":"421","severity":1,"message":"422","line":27,"column":5,"nodeType":"423","messageId":"424","endLine":34,"endColumn":19},{"ruleId":"369","severity":1,"message":"370","line":62,"column":5,"nodeType":"371","messageId":"372","endLine":62,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":72,"column":5,"nodeType":"371","messageId":"372","endLine":72,"endColumn":16},{"ruleId":"398","severity":1,"message":"399","line":174,"column":74,"nodeType":"400","messageId":"401","endLine":174,"endColumn":114},{"ruleId":"369","severity":1,"message":"370","line":16,"column":5,"nodeType":"371","messageId":"372","endLine":16,"endColumn":16},{"ruleId":"364","severity":1,"message":"425","line":2,"column":3,"nodeType":"366","messageId":"367","endLine":2,"endColumn":9},{"ruleId":"364","severity":1,"message":"426","line":3,"column":3,"nodeType":"366","messageId":"367","endLine":3,"endColumn":5},{"ruleId":"364","severity":1,"message":"427","line":4,"column":3,"nodeType":"366","messageId":"367","endLine":4,"endColumn":12},{"ruleId":"364","severity":1,"message":"428","line":5,"column":3,"nodeType":"366","messageId":"367","endLine":5,"endColumn":13},{"ruleId":"364","severity":1,"message":"429","line":6,"column":3,"nodeType":"366","messageId":"367","endLine":6,"endColumn":6},{"ruleId":"364","severity":1,"message":"430","line":7,"column":3,"nodeType":"366","messageId":"367","endLine":7,"endColumn":12},{"ruleId":"364","severity":1,"message":"431","line":8,"column":3,"nodeType":"366","messageId":"367","endLine":8,"endColumn":6},{"ruleId":"364","severity":1,"message":"432","line":12,"column":3,"nodeType":"366","messageId":"367","endLine":12,"endColumn":9},{"ruleId":"364","severity":1,"message":"433","line":13,"column":3,"nodeType":"366","messageId":"367","endLine":13,"endColumn":12},{"ruleId":"364","severity":1,"message":"434","line":14,"column":3,"nodeType":"366","messageId":"367","endLine":14,"endColumn":8},{"ruleId":"364","severity":1,"message":"435","line":15,"column":3,"nodeType":"366","messageId":"367","endLine":15,"endColumn":7},{"ruleId":"364","severity":1,"message":"436","line":16,"column":3,"nodeType":"366","messageId":"367","endLine":16,"endColumn":5},{"ruleId":"364","severity":1,"message":"437","line":17,"column":3,"nodeType":"366","messageId":"367","endLine":17,"endColumn":14},{"ruleId":"364","severity":1,"message":"438","line":18,"column":3,"nodeType":"366","messageId":"367","endLine":18,"endColumn":8},{"ruleId":"364","severity":1,"message":"390","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":26},{"ruleId":"368","severity":1,"message":"390","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":26},{"ruleId":"364","severity":1,"message":"390","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":26},{"ruleId":"368","severity":1,"message":"390","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":26},{"ruleId":"364","severity":1,"message":"390","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":26},{"ruleId":"368","severity":1,"message":"390","line":2,"column":10,"nodeType":"366","messageId":"367","endLine":2,"endColumn":26},{"ruleId":"369","severity":1,"message":"370","line":110,"column":7,"nodeType":"371","messageId":"372","endLine":110,"endColumn":20},{"ruleId":"369","severity":1,"message":"370","line":71,"column":11,"nodeType":"371","messageId":"372","endLine":71,"endColumn":22},{"ruleId":"369","severity":1,"message":"370","line":75,"column":7,"nodeType":"371","messageId":"372","endLine":75,"endColumn":18},{"ruleId":"369","severity":1,"message":"370","line":83,"column":9,"nodeType":"371","messageId":"372","endLine":83,"endColumn":20},{"ruleId":"369","severity":1,"message":"370","line":99,"column":9,"nodeType":"371","messageId":"372","endLine":99,"endColumn":20},{"ruleId":"369","severity":1,"message":"370","line":153,"column":9,"nodeType":"371","messageId":"372","endLine":153,"endColumn":20},{"ruleId":"364","severity":1,"message":"439","line":171,"column":11,"nodeType":"366","messageId":"367","endLine":171,"endColumn":13},{"ruleId":"368","severity":1,"message":"439","line":171,"column":11,"nodeType":"366","messageId":"367","endLine":171,"endColumn":13},{"ruleId":"369","severity":1,"message":"370","line":223,"column":5,"nodeType":"371","messageId":"372","endLine":223,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":262,"column":5,"nodeType":"371","messageId":"372","endLine":262,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":295,"column":3,"nodeType":"371","messageId":"372","endLine":295,"endColumn":14},{"ruleId":"369","severity":1,"message":"370","line":296,"column":3,"nodeType":"371","messageId":"372","endLine":296,"endColumn":14},{"ruleId":"369","severity":1,"message":"370","line":297,"column":3,"nodeType":"371","messageId":"372","endLine":297,"endColumn":14},{"ruleId":"369","severity":1,"message":"370","line":299,"column":5,"nodeType":"371","messageId":"372","endLine":299,"endColumn":16},{"ruleId":"369","severity":1,"message":"370","line":301,"column":36,"nodeType":"371","messageId":"372","endLine":301,"endColumn":47},{"ruleId":"369","severity":1,"message":"370","line":304,"column":3,"nodeType":"371","messageId":"372","endLine":304,"endColumn":14},{"ruleId":"369","severity":1,"message":"370","line":324,"column":7,"nodeType":"371","messageId":"372","endLine":324,"endColumn":18},{"ruleId":"369","severity":1,"message":"370","line":347,"column":9,"nodeType":"371","messageId":"372","endLine":347,"endColumn":20},{"ruleId":"369","severity":1,"message":"370","line":355,"column":3,"nodeType":"371","messageId":"372","endLine":355,"endColumn":14},{"ruleId":"364","severity":1,"message":"440","line":4,"column":57,"nodeType":"366","messageId":"367","endLine":4,"endColumn":75},{"ruleId":"368","severity":1,"message":"440","line":4,"column":57,"nodeType":"366","messageId":"367","endLine":4,"endColumn":75},{"ruleId":"364","severity":1,"message":"441","line":31,"column":13,"nodeType":"366","messageId":"367","endLine":31,"endColumn":20},{"ruleId":"368","severity":1,"message":"441","line":31,"column":13,"nodeType":"366","messageId":"367","endLine":31,"endColumn":20},{"ruleId":"369","severity":1,"message":"370","line":134,"column":5,"nodeType":"371","messageId":"372","endLine":134,"endColumn":16},{"ruleId":"442","severity":1,"message":"443","line":194,"column":1,"nodeType":"444","endLine":248,"endColumn":3},{"ruleId":"364","severity":1,"message":"445","line":198,"column":10,"nodeType":"366","messageId":"367","endLine":198,"endColumn":14},{"ruleId":"368","severity":1,"message":"445","line":198,"column":10,"nodeType":"366","messageId":"367","endLine":198,"endColumn":14},{"ruleId":"369","severity":1,"message":"370","line":31,"column":18,"nodeType":"371","messageId":"372","endLine":31,"endColumn":31},{"ruleId":"369","severity":1,"message":"370","line":40,"column":20,"nodeType":"371","messageId":"372","endLine":40,"endColumn":33},{"ruleId":"364","severity":1,"message":"446","line":4,"column":3,"nodeType":"366","messageId":"367","endLine":4,"endColumn":6},{"ruleId":"364","severity":1,"message":"447","line":5,"column":3,"nodeType":"366","messageId":"367","endLine":5,"endColumn":18},{"ruleId":"364","severity":1,"message":"448","line":6,"column":3,"nodeType":"366","messageId":"367","endLine":6,"endColumn":14},{"ruleId":"364","severity":1,"message":"449","line":7,"column":3,"nodeType":"366","messageId":"367","endLine":7,"endColumn":21},{"ruleId":"364","severity":1,"message":"450","line":8,"column":3,"nodeType":"366","messageId":"367","endLine":8,"endColumn":17},{"ruleId":"364","severity":1,"message":"451","line":9,"column":3,"nodeType":"366","messageId":"367","endLine":9,"endColumn":23},{"ruleId":"364","severity":1,"message":"452","line":10,"column":3,"nodeType":"366","messageId":"367","endLine":10,"endColumn":19},{"ruleId":"364","severity":1,"message":"453","line":11,"column":3,"nodeType":"366","messageId":"367","endLine":11,"endColumn":26},{"ruleId":"364","severity":1,"message":"454","line":12,"column":3,"nodeType":"366","messageId":"367","endLine":12,"endColumn":22},{"ruleId":"369","severity":1,"message":"370","line":6,"column":1,"nodeType":"371","messageId":"372","endLine":6,"endColumn":12},{"ruleId":"442","severity":1,"message":"455","line":7,"column":1,"nodeType":"444","endLine":36,"endColumn":3},{"ruleId":"364","severity":1,"message":"410","line":3,"column":8,"nodeType":"366","messageId":"367","endLine":3,"endColumn":17},{"ruleId":"368","severity":1,"message":"410","line":3,"column":8,"nodeType":"366","messageId":"367","endLine":3,"endColumn":17},{"ruleId":"364","severity":1,"message":"390","line":4,"column":44,"nodeType":"366","messageId":"367","endLine":4,"endColumn":60},{"ruleId":"368","severity":1,"message":"390","line":4,"column":44,"nodeType":"366","messageId":"367","endLine":4,"endColumn":60},{"ruleId":"369","severity":1,"message":"370","line":66,"column":7,"nodeType":"371","messageId":"372","endLine":66,"endColumn":18},{"ruleId":"398","severity":1,"message":"399","line":115,"column":91,"nodeType":"400","messageId":"401","endLine":115,"endColumn":131},{"ruleId":"364","severity":1,"message":"456","line":2,"column":3,"nodeType":"366","messageId":"367","endLine":2,"endColumn":8},{"ruleId":"364","severity":1,"message":"457","line":3,"column":3,"nodeType":"366","messageId":"367","endLine":3,"endColumn":16},"no-native-reassign",["458"],"no-negated-in-lhs",["459"],"lines-around-directive",["460"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'promise' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshMenu'. Either include it or remove the dependency array.","ArrayExpression",["461"],"'IndentationDataItem' is defined but never used.","React Hook useEffect has a missing dependency: 'focusManager'. Either include it or remove the dependency array.",["462"],["458"],["459"],"jsx-a11y/accessible-emoji",[],["460"],[],[],[],[],["463"],"'InlineStyleTypes' is defined but never used.","'BlockStyleTypes' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'FocusManager' is defined but never used.","'getDataList' is defined but never used.","react/no-danger","Dangerous property 'dangerouslySetInnerHTML' found","JSXAttribute","dangerousProp","'refresh' is defined but never used.","'recordAnchor' is defined but never used.","'parseAnchor' is defined but never used.","'showMarkdown' is defined but never used.","'selectState' is defined but never used.","'findEnterAnchor' is defined but never used.","'deleteEmpty' is defined but never used.","'insertSibling' is defined but never used.","'PlainText' is defined but never used.","'dataListToComponents' is defined but never used.","'childList' is assigned a value but never used.",["458"],["459"],[],["460"],[],[],[],[],"no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'strong' is defined but never used.","'em' is defined but never used.","'highlight' is defined but never used.","'inlineCode' is defined but never used.","'del' is defined but never used.","'plainText' is defined but never used.","'wbr' is defined but never used.","'header' is defined but never used.","'paragragh' is defined but never used.","'quote' is defined but never used.","'list' is defined but never used.","'li' is defined but never used.","'indentation' is defined but never used.","'table' is defined but never used.","'em' is assigned a value but never used.","'ConsoleSqlOutlined' is defined but never used.","'message' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'form' is assigned a value but never used.","'diy' is defined but never used.","'loginSuccessful' is defined but never used.","'loginFailed' is defined but never used.","'registerSuccessful' is defined but never used.","'registerFailed' is defined but never used.","'addArticleSuccessful' is defined but never used.","'addArticleFailed' is defined but never used.","'updateArticleSuccessful' is defined but never used.","'updateArticleFailed' is defined but never used.","Assign object to a variable before exporting as module default","'login' is defined but never used.","'changeArticle' is defined but never used.","no-global-assign","no-unsafe-negation","padding-line-between-statements",{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"466","fix":"468"},"Update the dependencies array to be: [refreshMenu, userName]",{"range":"469","text":"470"},"Update the dependencies array to be: [focusManager]",{"range":"471","text":"472"},{"range":"473","text":"472"},[1657,1667],"[refreshMenu, userName]",[2070,2072],"[focusManager]",[426,428]]