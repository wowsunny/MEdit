[{"D:\\workspace\\MEdit\\src\\index.tsx":"1","D:\\workspace\\MEdit\\src\\containers\\viewer\\index.tsx":"2","D:\\workspace\\MEdit\\src\\containers\\sider\\index.tsx":"3","D:\\workspace\\MEdit\\src\\containers\\editor\\index.tsx":"4","D:\\workspace\\MEdit\\src\\containers\\Viewer\\index.tsx":"5","D:\\workspace\\MEdit\\src\\containers\\Editor\\index.tsx":"6","D:\\workspace\\MEdit\\src\\App.tsx":"7","D:\\workspace\\MEdit\\src\\types\\index.d.ts":"8","D:\\workspace\\MEdit\\src\\utils\\SelectionManager.ts":"9","D:\\workspace\\MEdit\\src\\utils\\getKey.ts":"10","D:\\workspace\\MEdit\\src\\utils\\markdown\\index.ts":"11","D:\\workspace\\MEdit\\src\\utils\\markdown\\simple-markdown.js":"12","D:\\workspace\\MEdit\\src\\component\\Inline\\Strong\\index.tsx":"13","D:\\workspace\\MEdit\\src\\component\\Inline\\InlineComponent.ts":"14","D:\\workspace\\MEdit\\src\\component\\Stable\\Indentation\\index.tsx":"15","D:\\workspace\\MEdit\\src\\component\\Block\\Paragraph\\index.tsx":"16","D:\\workspace\\MEdit\\src\\component\\EventBus.ts":"17","D:\\workspace\\MEdit\\src\\component\\DefaultComponent.ts":"18","D:\\workspace\\MEdit\\src\\component\\Inline\\Wbr\\index.ts":"19","D:\\workspace\\MEdit\\src\\component\\Block\\Header\\index.tsx":"20","D:\\workspace\\MEdit\\src\\component\\Block\\CodeBlock\\index.tsx":"21","D:\\workspace\\MEdit\\src\\component\\Block\\List\\index.tsx":"22","D:\\workspace\\MEdit\\src\\component\\Block\\Table\\index.tsx":"23","D:\\workspace\\MEdit\\src\\types\\ComponentTypes.ts":"24","D:\\workspace\\MEdit\\src\\component\\Inline\\Em\\index.ts":"25","D:\\workspace\\MEdit\\src\\component\\Inline\\Del\\index.ts":"26","D:\\workspace\\MEdit\\src\\component\\Inline\\Highlight\\index.ts":"27","D:\\workspace\\MEdit\\src\\utils\\componentToData.ts":"28","D:\\workspace\\MEdit\\src\\utils\\dataToComponent.ts":"29","D:\\workspace\\MEdit\\src\\component\\Inline\\PlainText\\index.ts":"30","D:\\workspace\\MEdit\\src\\component\\Block\\Paragraph\\EventManager.ts":"31","D:\\workspace\\MEdit\\src\\utils\\FocusManager.ts":"32","D:\\workspace\\MEdit\\src\\component\\Block\\EditableBlock.ts":"33","D:\\workspace\\MEdit\\src\\component\\Block\\dndWrapper.tsx":"34"},{"size":233,"mtime":1619516457308,"results":"35","hashOfConfig":"36"},{"size":344,"mtime":1619522562331,"results":"37","hashOfConfig":"36"},{"size":1085,"mtime":1609512122896,"results":"38","hashOfConfig":"39"},{"size":1004,"mtime":1619603597707,"results":"40","hashOfConfig":"36"},{"size":344,"mtime":1616919600978,"results":"41","hashOfConfig":"42"},{"size":739,"mtime":1618381386029,"results":"43","hashOfConfig":"42"},{"size":202,"mtime":1619522553698,"results":"44","hashOfConfig":"36"},{"size":640,"mtime":1611043100764,"results":"45","hashOfConfig":"46"},{"size":2538,"mtime":1614604702524,"results":"47","hashOfConfig":"48"},{"size":149,"mtime":1619516457312,"results":"49","hashOfConfig":"36"},{"size":4054,"mtime":1619516457313,"results":"50","hashOfConfig":"36"},{"size":72514,"mtime":1619516457315,"results":"51","hashOfConfig":"36"},{"size":885,"mtime":1619516457298,"results":"52","hashOfConfig":"36"},{"size":4964,"mtime":1620008543467,"results":"53","hashOfConfig":"36"},{"size":10322,"mtime":1620291314473,"results":"54","hashOfConfig":"36"},{"size":3946,"mtime":1620348605783,"results":"55","hashOfConfig":"36"},{"size":1849,"mtime":1619516457294,"results":"56","hashOfConfig":"36"},{"size":1518,"mtime":1619516457294,"results":"57","hashOfConfig":"36"},{"size":1653,"mtime":1619516457300,"results":"58","hashOfConfig":"36"},{"size":555,"mtime":1616656337668,"results":"59","hashOfConfig":"60"},{"size":455,"mtime":1616656479027,"results":"61","hashOfConfig":"60"},{"size":5604,"mtime":1620350977265,"results":"62","hashOfConfig":"36"},{"size":498,"mtime":1616656666621,"results":"63","hashOfConfig":"60"},{"size":738,"mtime":1620119559811,"results":"64","hashOfConfig":"36"},{"size":925,"mtime":1619516457296,"results":"65","hashOfConfig":"36"},{"size":848,"mtime":1619516457295,"results":"66","hashOfConfig":"36"},{"size":891,"mtime":1619516457296,"results":"67","hashOfConfig":"36"},{"size":1255,"mtime":1619516457311,"results":"68","hashOfConfig":"36"},{"size":1534,"mtime":1619516457312,"results":"69","hashOfConfig":"36"},{"size":4796,"mtime":1619516457298,"results":"70","hashOfConfig":"36"},{"size":2713,"mtime":1619597291222,"results":"71","hashOfConfig":"36"},{"size":1595,"mtime":1619516457310,"results":"72","hashOfConfig":"36"},{"size":12361,"mtime":1619516457289,"results":"73","hashOfConfig":"36"},{"size":2898,"mtime":1620290957286,"results":"74","hashOfConfig":"36"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"190j9jz",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"1rl2yih",{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"suw9d",{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"14g46g5",{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},"y2tihf",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},"k1fhgd",{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"127"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"127"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"77"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"77"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"77"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"77"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"77"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"77"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"77"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"77"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\workspace\\MEdit\\src\\index.tsx",[],["166","167","168","169","170","171","172"],"D:\\workspace\\MEdit\\src\\containers\\viewer\\index.tsx",[],"D:\\workspace\\MEdit\\src\\containers\\sider\\index.tsx",["173"],"import React, { useState, createRef, useEffect } from 'react';\r\nimport { throttle } from 'lodash';\r\nimport './style.scss';\r\n\r\nexport interface SiderProps {\r\n\r\n}\r\n\r\nconst Sider: React.FC<SiderProps> = () => {\r\n  const [siderWidth, setSiderWidth] = useState(200);\r\n  const ref = createRef<HTMLDivElement>();\r\n  let isDragStart = false;\r\n  const handleDrag = throttle((e) => {\r\n    if (e.clientX === 0) return;\r\n    if (isDragStart) {\r\n      isDragStart = false;\r\n      return;\r\n    }\r\n    setSiderWidth(e.clientX);\r\n  }, 17);\r\n  useEffect(() => {\r\n    const border = ref.current;\r\n    if (border) {\r\n      border.addEventListener('drag', handleDrag);\r\n      border.addEventListener('dragstart', (e) => {\r\n        isDragStart = true;\r\n        e.dataTransfer && e.dataTransfer.setDragImage(new Image(), 0, 0);\r\n      }\r\n      );\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className='sider-wrapper' style={{ 'flexBasis': siderWidth }}>\r\n      <div className='content'>sider</div>\r\n      <div className='sider-border' ref={ref} draggable='true' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sider;",["174","175","176","177","178","179","180","181"],"D:\\workspace\\MEdit\\src\\containers\\editor\\index.tsx",["182"],"import React, { useEffect, useRef } from 'react';\r\nimport './style.scss';\r\nimport Intendentation from 'component/Stable/Indentation';\r\nimport FocusManager from 'utils/FocusManager';\r\nimport { DragDropContext } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\n\r\nexport interface EditorProps {\r\n\r\n}\r\nconst Editor: React.FC<EditorProps> = () => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const focusManager = new FocusManager({ rootRef: ref });\r\n  useEffect(() => {\r\n    focusManager.init();\r\n  }, []);\r\n  const mountValues = { childList: [], focusManager, handleInsertSiblings: () => { }, handleDestroy: () => { } };\r\n  const dndValues = { findIndex: (key: string) => { }, dndMove: (sourceKey: string, targetIndex: number) => { } };\r\n  return (\r\n    <div className='editor-wrapper' ref={ref}>\r\n      <Intendentation id='initIndentation' depth={0} mountValues={mountValues} dndValues={dndValues} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragDropContext(HTML5Backend)(Editor);","D:\\workspace\\MEdit\\src\\containers\\Viewer\\index.tsx",[],["183","184","185","186","187","188","189","190"],"D:\\workspace\\MEdit\\src\\containers\\Editor\\index.tsx",["191"],"import React, { useEffect, useRef } from 'react';\r\nimport './style.scss';\r\nimport Intendentation from 'component/Stable/Indentation';\r\nimport FocusManager from 'utils/FocusManager';\r\n\r\nexport interface EditorProps {\r\n\r\n}\r\nconst Editor: React.FC<EditorProps> = () => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const focusManager = new FocusManager({ rootRef: ref });\r\n  useEffect(() => {\r\n    focusManager.init();\r\n  }, []);\r\n  const stableValues = { childList: [], focusManager, handleInsertSiblings: () => { }, handleDestroy: () => { } };\r\n  return (\r\n    <div className='editor-wrapper' ref={ref}>\r\n      <Intendentation id='initIndentation' depth={0} stableValues={stableValues} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;","D:\\workspace\\MEdit\\src\\App.tsx",[],"D:\\workspace\\MEdit\\src\\types\\index.d.ts",["192","193","194","195"],"D:\\workspace\\MEdit\\src\\utils\\SelectionManager.ts",["196","197","198","199","200","201","202"],"export interface SelectionManagerProps {\r\n  ref: React.RefObject<HTMLElement>;\r\n}\r\n\r\nexport default class SelectionManager {\r\n  target: Element;\r\n\r\n  constructor(props: SelectionManagerProps) {\r\n    const { ref } = props;\r\n    if (!ref.current) throw new Error();\r\n    this.target = ref.current;\r\n  }\r\n\r\n  private getSelection(): Selection | null {\r\n    const selection = window.getSelection();\r\n    if (!selection || !selection.anchorNode || !this.target.contains(selection.anchorNode)) {\r\n      console.warn('no selection');\r\n      return null;\r\n    }\r\n    return selection;\r\n  }\r\n\r\n  public getPosition(): number | null {\r\n    const selection = getSelection();\r\n    if (!selection) return null;\r\n    if (!selection.isCollapsed) {\r\n      console.warn('no collapsed');\r\n    }\r\n\r\n    const traverse = (node: Node): number => {\r\n      if (node.nodeName === '#text') {\r\n        return (node as Text).data.length;\r\n      }\r\n      const children = node.childNodes;\r\n      let result = 0;\r\n      children.forEach(item => {\r\n        result += traverse(item);\r\n      });\r\n      return result;\r\n    };\r\n\r\n    const getOffset = (child: Node, curPosition: number, targetParent: Node): number => {\r\n      if (child === targetParent) return curPosition;\r\n      let curChild = child;\r\n      let offset = curPosition;\r\n      while (curChild.previousSibling) {\r\n        offset += traverse(curChild.previousSibling);\r\n        curChild = curChild.previousSibling;\r\n      }\r\n      if (!child.parentNode) {\r\n        console.warn('no parent');\r\n        return offset;\r\n      }\r\n      return getOffset(child.parentNode, offset, targetParent);\r\n    };\r\n    return getOffset(selection.anchorNode!, selection.anchorOffset, this.target);\r\n  }\r\n\r\n  private setPosition() {\r\n    console.log(this.target);\r\n  }\r\n\r\n\r\n  public record() {\r\n    const selection = this.getSelection();\r\n    if (!selection) return;\r\n    const anchor = selection.anchorNode;\r\n    if (anchor!.nodeName !== '#text') {\r\n      console.warn(`anchor is ${typeof anchor} ${anchor}instead of Text`);\r\n    }\r\n    const next = (anchor as Text).splitText(selection.anchorOffset);\r\n    next.parentElement?.insertBefore(document.createElement('wbr'), next);\r\n    console.log('record:', next.parentElement?.innerHTML);\r\n  }\r\n\r\n  public parse() {\r\n    const wbr = this.target.querySelector('wbr');\r\n    console.log('parse:', wbr, this.target.innerHTML);\r\n    if (!wbr) return;\r\n    const selection = window.getSelection();\r\n    selection?.collapse(wbr, 0);\r\n    wbr.parentNode?.removeChild(wbr);\r\n  }\r\n\r\n}",["203","204","205","206","207","208","209","210"],"D:\\workspace\\MEdit\\src\\utils\\getKey.ts",[],"D:\\workspace\\MEdit\\src\\utils\\markdown\\index.ts",[],"D:\\workspace\\MEdit\\src\\utils\\markdown\\simple-markdown.js",[],["211","212","213","214","215","216","217"],"D:\\workspace\\MEdit\\src\\component\\Inline\\Strong\\index.tsx",["218","219"],"import { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport { InlineStyleTypes } from 'types/ComponentTypes';\r\nimport InlineComponent from '../InlineComponent';\r\n\r\ninterface StrongProps extends DefaultComponentProps {\r\n\r\n}\r\n\r\nexport default class Strong extends InlineComponent {\r\n  public component: Element;\r\n\r\n  constructor(props: StrongProps | DefaultComponentProps) {\r\n    super(props);\r\n    this.component = document.createElement('strong');\r\n    this.refresh();\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return `**${this.getContent()}**`;\r\n  }\r\n\r\n  public getContent() {\r\n    return this.childList.reduce((pre, cur) => {\r\n      return pre + (cur as InlineComponent).getContent();\r\n    }, '');\r\n  }\r\n\r\n  private refresh() {\r\n    this.component.innerHTML = '';\r\n    this.childList.forEach(child => {\r\n      this.component.appendChild(child.component);\r\n    });\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\component\\Inline\\InlineComponent.ts",["220","221","222","223","224","225","226","227"],"import EventBus, { BusEventTypes } from 'component/EventBus';\r\nimport DefaultComponent, { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport { BlockStyleTypes, DefaultDataItem, InlineStyleTypes } from 'types/ComponentTypes';\r\nimport { componentsToDataList } from 'utils/componentToData';\r\nimport './style.scss';\r\n\r\nexport interface InlineMountProps {\r\n  eventBus: EventBus;\r\n  handleEnter: (key: string, cur?: DefaultDataItem, next?: DefaultDataItem) => void;\r\n  handleDestroy: (key: string) => void;\r\n  handleInsertSibling: (key: string, components: DefaultComponent[], replace: boolean) => void;\r\n}\r\nexport default abstract class InlineComponent extends DefaultComponent {\r\n  public inlineMountProps?: InlineMountProps;\r\n\r\n  constructor(props: DefaultComponentProps) {\r\n    super(props);\r\n  }\r\n\r\n  onChildInsertSibling(key: string, siblings: DefaultComponent[], replace: boolean) {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    const index = this.findChildIndex(key);\r\n    let temp = index;\r\n    siblings.forEach(sibling => {\r\n      (this.component.childNodes[temp] as Element).insertAdjacentElement('afterend', sibling.component);\r\n      this.mountChild(sibling as InlineComponent);\r\n      temp += 1;\r\n    });\r\n    if (replace) {\r\n      console.log('replace child: ', this.childList[index].key);\r\n      this.inlineMountProps?.eventBus.remove(this.childList[index].key);\r\n      this.childList.splice(index, 1, ...siblings);\r\n      this.component.removeChild(this.component.childNodes[index]);\r\n    } else {\r\n      this.childList.splice(index + 1, 0, ...siblings);\r\n    }\r\n  }\r\n\r\n  onChildEnter(key: string, _cur?: DefaultDataItem, _next?: DefaultDataItem) {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    const index = this.findChildIndex(key);\r\n    const curDataList = componentsToDataList(this.childList.slice(0, index) as InlineComponent[]);\r\n    const nextDataList = componentsToDataList(this.childList.slice(index + 1) as InlineComponent[]);\r\n    (_cur?.childList.length || _cur?.content?.length) && curDataList.push(_cur);\r\n    (_next?.childList.length || _next?.content?.length) && nextDataList.unshift(_next);\r\n    const cur = curDataList.length ? { type: this.type, childList: curDataList } : undefined;\r\n    const next = nextDataList.length ? { type: this.type, childList: nextDataList } : undefined;\r\n    this.inlineMountProps!.handleEnter(this.key, cur, next);\r\n  }\r\n\r\n  onChildDestroy(key: string) {\r\n    console.log('destroy:', key);\r\n    const index = this.findChildIndex(key);\r\n    if (document.contains(this.childList[index].component))\r\n      this.component.removeChild(this.component.childNodes[index]);\r\n    this.childList.splice(index, 1);\r\n    if (!this.childList.length) {\r\n      this.destroy();\r\n    }\r\n  }\r\n\r\n  public mountChild(child: InlineComponent) {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    const that = this;\r\n    child.mount({\r\n      eventBus: this.inlineMountProps!.eventBus,\r\n      handleEnter: this.onChildEnter.bind(that),\r\n      handleDestroy: this.onChildDestroy.bind(that),\r\n      handleInsertSibling: this.onChildInsertSibling.bind(that)\r\n    });\r\n  }\r\n\r\n  public mount(props: InlineMountProps) {\r\n    if (this.mounted) return;\r\n    this.mounted = true;\r\n    this.inlineMountProps = props;\r\n    const that = this;\r\n    this.inlineMountProps.eventBus.subscribe(BusEventTypes.showMarkdown, this.key, (values: { show: boolean }) => {\r\n      const { show } = values;\r\n      if (this.component.getAttribute('class') && (!!this.component.getAttribute('class')!.match(/mark/) === show)) return;\r\n      this.component.setAttribute('class', `${this.type}-${show ? 'mark' : ''}`);\r\n    });\r\n    this.childList.forEach(child => {\r\n      const { eventBus } = props;\r\n      (child as InlineComponent).mount({\r\n        eventBus,\r\n        handleEnter: this.onChildEnter.bind(that),\r\n        handleDestroy: this.onChildDestroy.bind(that),\r\n        handleInsertSibling: this.onChildInsertSibling.bind(that)\r\n      });\r\n    });\r\n  }\r\n\r\n  public unmount() {\r\n    this.inlineMountProps = undefined;\r\n    this.mounted = false;\r\n  }\r\n\r\n  public destroyChild(key: string) {\r\n    console.log('remove: ', key);\r\n    const index = this.findChildIndex(key);\r\n    this.childList.splice(index, 1);\r\n    this.inlineMountProps?.eventBus.remove(key);\r\n    const childNode = this.component.childNodes[index];\r\n    if (childNode && this.component.contains(childNode))\r\n      this.component.removeChild(this.component.childNodes[index]);\r\n  }\r\n\r\n  // mount but not contains\r\n  public destroy() {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    this.childList.forEach(child => child.destroy());\r\n    this.inlineMountProps!.eventBus.remove(this.key);\r\n    this.inlineMountProps!.handleDestroy(this.key);\r\n  }\r\n\r\n  abstract getContent(): string;\r\n}\r\n","D:\\workspace\\MEdit\\src\\component\\Stable\\Indentation\\index.tsx",["228","229","230","231"],"D:\\workspace\\MEdit\\src\\component\\Block\\Paragraph\\index.tsx",["232","233"],"D:\\workspace\\MEdit\\src\\component\\EventBus.ts",["234","235","236","237","238","239","240","241","242","243"],"export enum BusEventTypes {\r\n  refresh = 'refresh',\r\n  recordAnchor = 'recordAnchor',\r\n  parseAnchor = 'parseAnchor',\r\n  showMarkdown = 'showMarkdown',\r\n  selectState = 'selectState',\r\n  findEnterAnchor = 'findEnterAnchor',\r\n  deleteEmpty = 'deleteEmpty',\r\n  insertSibling = 'insertSibling'\r\n}\r\n\r\nexport type TaskList = Array<{\r\n  type: BusEventTypes,\r\n  listeners: { key: string, func: Function }[]\r\n}>;\r\n\r\nexport default class EventBus {\r\n  taskList: TaskList;\r\n\r\n  constructor() {\r\n    this.taskList = [];\r\n  }\r\n\r\n  dispatch(type: BusEventTypes, values?: { [propName: string]: any }, once: boolean = false, inCase?: () => void) {\r\n    const task = this.taskList.find(item => item.type === type);\r\n    if (!task) {\r\n      inCase && inCase();\r\n      console.error('no task exist in type: ', type);\r\n      return;\r\n    }\r\n    // task.listeners.forEach(listener => listener.func(values));\r\n    for (let i = 0; i < task.listeners.length; i++) {\r\n      const result = task.listeners[i].func(values);\r\n      if (once && result) break;\r\n    }\r\n  }\r\n\r\n  subscribe(type: BusEventTypes, key: string, func: Function) {\r\n    const task = this.taskList.find(item => item.type === type);\r\n    if (task) {\r\n      if (task.listeners.find(item => item.key === key))\r\n        console.error('repeat listener: ', key, type);\r\n      task.listeners.push({ key, func });\r\n    } else {\r\n      this.taskList.push({ type, listeners: [{ key, func }] });\r\n    }\r\n  }\r\n\r\n  remove(key: string) {\r\n    this.taskList.forEach(task => {\r\n      const index = task.listeners.findIndex(item => item.key === key);\r\n      if (index < 0) return;\r\n      task.listeners.splice(index, 1);\r\n    });\r\n  }\r\n\r\n  clean() {\r\n    this.taskList = [];\r\n  }\r\n\r\n  getKeysOnType(type: BusEventTypes) {\r\n    return this.taskList.find(task => task.type === type)?.listeners.map(item => item.key);\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\component\\DefaultComponent.ts",[],"D:\\workspace\\MEdit\\src\\component\\Inline\\Wbr\\index.ts",[],"D:\\workspace\\MEdit\\src\\component\\Block\\Header\\index.tsx",[],["244","245","246","247","248","249","250","251"],"D:\\workspace\\MEdit\\src\\component\\Block\\CodeBlock\\index.tsx",["252"],"import * as React from 'react';\r\n\r\nexport interface CodeBlockProps {\r\n  content?: string;\r\n  handleInsertParagraph: (key: string) => void;\r\n}\r\n\r\nexport interface CodeBlockState {\r\n\r\n}\r\n\r\nclass CodeBlock extends React.Component<CodeBlockProps, CodeBlockState> {\r\n  constructor(props: CodeBlockProps) {\r\n    super(props);\r\n    console.log('here');\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>codeBlock</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBlock;","D:\\workspace\\MEdit\\src\\component\\Block\\List\\index.tsx",["253","254","255","256","257","258"],"D:\\workspace\\MEdit\\src\\component\\Block\\Table\\index.tsx",["259"],"import * as React from 'react';\r\nimport { DefaultDataItem } from 'types/ComponentTypes';\r\n\r\nexport interface TableProps {\r\n  handleInsertParagraph: (key: string) => void;\r\n  tableData?: Array<DefaultDataItem[]>;\r\n}\r\n\r\nexport interface TableState {\r\n\r\n}\r\n\r\nclass Table extends React.Component<TableProps, TableState> {\r\n  constructor(props: TableProps) {\r\n    super(props);\r\n    console.log('here');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>table</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;","D:\\workspace\\MEdit\\src\\types\\ComponentTypes.ts",["260","261","262","263","264","265","266","267","268","269","270","271","272","273"],"export enum InlineStyleTypes {\r\n  strong = 'strong',\r\n  em = 'em',\r\n  highlight = 'highlight',\r\n  inlineCode = 'inlineCode',\r\n  del = 'del',\r\n  plainText = 'plainText',\r\n  wbr = 'wbr'\r\n}\r\n\r\nexport enum BlockStyleTypes {\r\n  heading = 'heading',\r\n  paragragh = 'paragraph',\r\n  codeBlock = 'codeblock',\r\n  list = 'list',\r\n  li = 'li',\r\n  indentation = 'indentation',\r\n  table = 'table'\r\n}\r\n\r\nexport type HeaderLevelType = 1 | 2 | 3 | 4 | 5 | 6;\r\n\r\nexport interface DefaultDataItem {\r\n  key?: string;\r\n  type: BlockStyleTypes | InlineStyleTypes;\r\n  childList: DefaultDataItem[];\r\n  content?: string;\r\n  tableData?: Array<DefaultDataItem[]>;\r\n  listData?: Array<DefaultDataItem[]>;\r\n  imgData?: string;\r\n  headerLevel?: HeaderLevelType;\r\n\r\n}\r\n","D:\\workspace\\MEdit\\src\\component\\Inline\\Em\\index.ts",["274","275"],"import { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport { InlineStyleTypes } from 'types/ComponentTypes';\r\nimport InlineComponent from '../InlineComponent';\r\n\r\ninterface EmProps extends DefaultComponentProps {\r\n\r\n}\r\n\r\nexport default class Em extends InlineComponent {\r\n  public component: Element;\r\n\r\n  constructor(props: EmProps | DefaultComponentProps) {\r\n    super(props);\r\n    const em = document.createElement('em');\r\n    em.setAttribute('class', 'em');\r\n    this.component = em;\r\n\r\n    this.refresh();\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return `*${this.getContent()}*`;\r\n  }\r\n\r\n  public getContent() {\r\n    return this.childList.reduce((pre, cur) => {\r\n      return pre + (cur as InlineComponent).getContent();\r\n    }, '');\r\n  }\r\n\r\n  public refresh() {\r\n    this.component.innerHTML = '';\r\n    this.childList.forEach(child => {\r\n      this.component.appendChild(child.component);\r\n    });\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\component\\Inline\\Del\\index.ts",["276","277"],"import { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport { InlineStyleTypes } from 'types/ComponentTypes';\r\nimport InlineComponent from '../InlineComponent';\r\n\r\ninterface DelProps extends DefaultComponentProps {\r\n\r\n}\r\n\r\nexport default class Del extends InlineComponent {\r\n  public component: Element;\r\n\r\n  constructor(props: DelProps) {\r\n    super(props);\r\n    this.component = document.createElement('del');\r\n    this.refresh();\r\n  }\r\n\r\n  public refresh() {\r\n    this.component.innerHTML = '';\r\n    this.childList.forEach(child => {\r\n      this.component.appendChild(child.component);\r\n    });\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return `~~${this.getContent()}~~`;\r\n  }\r\n\r\n  public getContent() {\r\n    return this.childList.reduce((pre, cur) => {\r\n      return pre + (cur as InlineComponent).getContent();\r\n    }, '');\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\component\\Inline\\Highlight\\index.ts",["278","279"],"import { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport { InlineStyleTypes } from 'types/ComponentTypes';\r\nimport InlineComponent from '../InlineComponent';\r\n\r\ninterface HighlightProps extends DefaultComponentProps {\r\n\r\n}\r\n\r\nexport default class Highlight extends InlineComponent {\r\n  public component: Element;\r\n\r\n  constructor(props: HighlightProps | DefaultComponentProps) {\r\n    super(props);\r\n    this.component = document.createElement('mark');\r\n    this.refresh();\r\n  }\r\n\r\n  public refresh() {\r\n    this.component.innerHTML = '';\r\n    this.childList.forEach(child => {\r\n      this.component.appendChild(child.component);\r\n    });\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return `==${this.getContent()}==`;\r\n  }\r\n\r\n  public getContent() {\r\n    return this.childList.reduce((pre, cur) => {\r\n      return pre + (cur as InlineComponent).getContent();\r\n    }, '');\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\utils\\componentToData.ts",[],"D:\\workspace\\MEdit\\src\\utils\\dataToComponent.ts",[],"D:\\workspace\\MEdit\\src\\component\\Inline\\PlainText\\index.ts",["280"],"import { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport EventBus, { BusEventTypes } from 'component/EventBus';\r\nimport { InlineStyleTypes } from 'types/ComponentTypes';\r\nimport InlineComponent, { InlineMountProps } from '../InlineComponent';\r\nimport Wbr from '../Wbr';\r\n\r\ninterface MountedPlainTextProps extends DefaultComponentProps {\r\n  content: string;\r\n}\r\ninterface UnMountedPlainTextProps extends DefaultComponentProps {\r\n  content: string;\r\n}\r\n\r\nexport default class PlainText extends InlineComponent {\r\n  content: string;\r\n\r\n  component: Element;\r\n\r\n  constructor(props: MountedPlainTextProps | UnMountedPlainTextProps) {\r\n    super(props);\r\n    const { content } = props;\r\n    this.content = content;\r\n    this.component = document.createElement('span');\r\n    this.component.appendChild(document.createTextNode(this.content));\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return this.component.innerHTML;\r\n  }\r\n\r\n  public getContent() {\r\n    this.content = this.component.innerHTML;\r\n    return this.content;\r\n  }\r\n\r\n  public getComponent() {\r\n    return this.component;\r\n  }\r\n\r\n  public refresh() {\r\n    this.component.innerHTML = this.content;\r\n  }\r\n\r\n  public setContent(content: string) {\r\n    this.content = content;\r\n    // this.refresh();\r\n    if (content === this.component.innerHTML) {\r\n      return;\r\n    }\r\n    this.refresh();\r\n  }\r\n\r\n  private mountEventBus(eventBus: EventBus) {\r\n    eventBus.subscribe(BusEventTypes.recordAnchor, this.key, () => {\r\n      const selection = document.getSelection();\r\n      if (selection?.anchorNode && this.component.contains(selection.anchorNode)) {\r\n        this.recordAnchor();\r\n      }\r\n      return false;\r\n    });\r\n\r\n    eventBus.subscribe(BusEventTypes.deleteEmpty, this.key, () => {\r\n      if (document.contains(this.component)) return;\r\n      this.destroy();\r\n    });\r\n\r\n    eventBus.subscribe(BusEventTypes.findEnterAnchor, this.key, () => {\r\n      const selection = document.getSelection();\r\n      const content = this.getContent();\r\n      if (!selection?.anchorNode) return;\r\n      // 消除零宽空格的影响\r\n      if (selection.anchorNode instanceof Text && selection.anchorNode.textContent === '\\u200B') {\r\n        selection.anchorNode.remove();\r\n      }\r\n      if (this.component.contains(selection?.anchorNode)) {\r\n        const offset = selection.anchorOffset;\r\n        const curContent = content.slice(0, offset);\r\n        const nextContent = content.slice(offset);\r\n        // this.setContent(curContent);\r\n        this.inlineMountProps?.handleEnter(this.key,\r\n          curContent.length === 0 ? undefined : {\r\n            type: InlineStyleTypes.plainText,\r\n            childList: [],\r\n            content: curContent\r\n          }, nextContent.length === 0 ? undefined : {\r\n            type: InlineStyleTypes.plainText,\r\n            childList: [],\r\n            content: this.getContent().slice(offset)\r\n          });\r\n      }\r\n      // TODO 这里只针对paragraph进行设计，需要进行拓充\r\n      else if (selection?.anchorNode?.nodeName === 'P') {\r\n        this.inlineMountProps?.eventBus.dispatch(BusEventTypes.insertSibling);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public mount(props: InlineMountProps) {\r\n    this.mounted = true;\r\n    this.inlineMountProps = props;\r\n    this.mountEventBus(this.inlineMountProps.eventBus);\r\n  }\r\n\r\n  private recordAnchor() {\r\n    if (!this.mounted) throw new Error('unmount component cannot use this function');\r\n    const selection = document.getSelection();\r\n    if (!selection) throw new Error('selection is null');\r\n    if (!this.component.contains(selection.anchorNode)) {\r\n      console.error(`active node is ${selection.anchorNode} instead of ${this.component}`);\r\n    }\r\n\r\n    this.content = this.component.innerHTML.replace(/&nbsp;/g, ' ');\r\n    const offset = selection.anchorOffset;\r\n    const curContent = this.content.slice(0, offset);\r\n    const nextContent = this.content.slice(offset);\r\n    this.setContent(curContent.replace(/\\s/g, '&nbsp;'));\r\n    const wbr = new Wbr({ type: InlineStyleTypes.wbr, childList: [] });\r\n    if (nextContent.length) {\r\n      const sibling = new PlainText({ type: InlineStyleTypes.plainText, childList: [], content: nextContent.replace(/\\s/g, '&nbsp;') });\r\n      this.inlineMountProps!.handleInsertSibling(this.key, [wbr, sibling], !(curContent.length));\r\n    } else {\r\n      this.inlineMountProps!.handleInsertSibling(this.key, [wbr], !(curContent.length));\r\n    }\r\n  }\r\n\r\n  public setAnchor(offset: number = 0) {\r\n    if (!this.mounted) throw new Error('no mount component cannot setAnchor');\r\n    const selection = document.getSelection();\r\n    if (offset === -1) {\r\n      selection?.collapse(this.component, this.getContent.length + 1);\r\n      return;\r\n    }\r\n    selection?.collapse(this.component, offset);\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\component\\Block\\Paragraph\\EventManager.ts",["281"],"export interface EventManagerProps {\r\n  target: Element;\r\n  handleEnter: () => void;\r\n  handleCtrlEnter: () => void;\r\n  handleDelete: (isKeyDown: boolean) => void;\r\n  handleReParse: () => void;\r\n  handleTab: (isInside: boolean) => void;\r\n\r\n}\r\nexport default class EventManager {\r\n  target: Element;\r\n\r\n  isCtrlPress: boolean;\r\n\r\n  isShiftPress: boolean;\r\n\r\n  isComposing: boolean;\r\n\r\n  onEnter: () => void;\r\n\r\n  onCtrlEnter: () => void;\r\n\r\n  onDelete: (isKeyDown: boolean) => void;\r\n\r\n  reParse: () => void;\r\n\r\n  isInputing: boolean;\r\n\r\n  onTab: (isInside: boolean) => void;\r\n\r\n  constructor(props: EventManagerProps) {\r\n    const { target, handleEnter, handleCtrlEnter, handleDelete, handleReParse, handleTab } = props;\r\n    this.target = target;\r\n    this.onEnter = handleEnter;\r\n    this.onCtrlEnter = handleCtrlEnter;\r\n    this.onDelete = handleDelete;\r\n    this.reParse = handleReParse;\r\n    this.onTab = handleTab;\r\n    this.isComposing = false;\r\n    this.isInputing = false;\r\n    this.isCtrlPress = false;\r\n    this.isShiftPress = false;\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    this.target.addEventListener('keydown', (e: any) => {\r\n      if (e.code === 'ControlLeft') {\r\n        this.isCtrlPress = true;\r\n      } else if (e.code === 'ShiftLeft') {\r\n        this.isShiftPress = true;\r\n      }\r\n\r\n      if (this.isComposing) return;\r\n      if (e.code === 'Backspace' || e.code === 'Delete') {\r\n        // something\r\n        this.onDelete(true);\r\n\r\n      } else if (e.code === 'Enter') {\r\n        e.preventDefault();\r\n        if (this.isCtrlPress) this.onCtrlEnter();\r\n        else this.onEnter();\r\n      } else if (e.code === 'Tab') {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.onTab(!this.isShiftPress);\r\n      }\r\n    });\r\n\r\n    this.target.addEventListener('input', (e: InputEventInit) => {\r\n      if (e.inputType?.match(/insert/)) {\r\n        this.isInputing = true;\r\n      }\r\n      if (e.inputType === 'deleteContentForward' || e.inputType === 'deleteContentBackward') {\r\n        console.log('delete trigger');\r\n        this.onDelete(false);\r\n      }\r\n    });\r\n    this.target.addEventListener('compositionstart', (e: InputEventInit) => {\r\n      this.isComposing = true;\r\n    });\r\n    this.target.addEventListener('compositionend', (e: InputEventInit) => {\r\n      this.isComposing = false;\r\n    });\r\n    this.target.addEventListener('keyup', (e: any) => {\r\n      if (e.code === 'ControlLeft') {\r\n        this.isCtrlPress = false;\r\n      } else if (e.code === 'ShiftLeft') {\r\n        this.isShiftPress = false;\r\n      }\r\n\r\n      if (this.isComposing || !this.isInputing) return;\r\n      // 触发解析\r\n      this.reParse();\r\n      this.isInputing = false;\r\n    });\r\n  }\r\n}","D:\\workspace\\MEdit\\src\\utils\\FocusManager.ts",["282","283"],"/**\r\n * FocusManager是用来根据全局光标位置控制showmarkdown变量的\r\n * 同时还兼顾选中一个或多个块状组件时的逻辑\r\n */\r\nexport interface FocusManagerProps {\r\n  rootRef: React.RefObject<HTMLDivElement>;\r\n}\r\nexport default class FocusManager {\r\n  public rootRef: React.RefObject<HTMLDivElement>;\r\n\r\n  private inited: boolean = false;\r\n\r\n  public componentList: { key: string, detectAnchor: () => boolean }[];\r\n\r\n  constructor(props: FocusManagerProps) {\r\n    const { rootRef } = props;\r\n    this.rootRef = rootRef;\r\n    // just EditableBlock\r\n    this.componentList = [];\r\n    this.init();\r\n  }\r\n\r\n  public init() {\r\n    if (!this.rootRef.current) return;\r\n    if (this.inited) return;\r\n    this.rootRef.current!.addEventListener('click', e => {\r\n      let flag = false;\r\n      this.componentList.forEach(component => {\r\n        if (component.detectAnchor()) flag = true;\r\n      });\r\n      if (!flag) console.error('cannot find anchor');\r\n    });\r\n\r\n    this.rootRef.current!.addEventListener('keydown', e => {\r\n      if (e.code === 'ArrowUp' || e.code === 'ArrowDown' || e.code === 'ArrowLeft' || e.code === 'ArrowRight') {\r\n        let flag = false;\r\n        this.componentList.forEach(component => {\r\n          if (component.detectAnchor()) flag = true;\r\n        });\r\n        if (!flag) console.error('cannot find anchor');\r\n      }\r\n    });\r\n  }\r\n\r\n  public reRank() {\r\n\r\n  }\r\n\r\n  public register(key: string, detectAnchor: () => boolean) {\r\n    this.componentList.push({ key, detectAnchor });\r\n    this.reRank();\r\n  }\r\n\r\n  public remove() {\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}","D:\\workspace\\MEdit\\src\\component\\Block\\EditableBlock.ts",["284","285","286","287","288","289","290","291","292","293","294","295","296","297","298"],"import DefaultComponent, { DefaultComponentProps } from 'component/DefaultComponent';\r\nimport InlineComponent from 'component/Inline/InlineComponent';\r\nimport PlainText from 'component/Inline/PlainText';\r\nimport Wbr from 'component/Inline/Wbr';\r\nimport { BlockStyleTypes, DefaultDataItem, InlineStyleTypes } from 'types/ComponentTypes';\r\nimport { componentsToDataList } from 'utils/componentToData';\r\nimport { dataListToComponents } from 'utils/dataToComponent';\r\nimport { getDataList } from 'utils/markdown';\r\nimport EventBus, { BusEventTypes } from '../EventBus';\r\nimport EventManager from './Paragraph/EventManager';\r\n\r\nexport interface BlockMountProps {\r\n  handleInsertSiblings: (components: DefaultDataItem, replace: boolean) => void;\r\n  handleEnter: (key: string, nextChildren: DefaultDataItem[]) => void;\r\n  handleTab: (key: string, isInside: boolean) => void;\r\n  handleDestroy: () => void;\r\n}\r\n\r\nexport default abstract class EditableBlock extends DefaultComponent {\r\n  public eventBus: EventBus;\r\n\r\n  public component: Element;\r\n\r\n  blockMountProps?: BlockMountProps;\r\n\r\n  oneStepToDelete: boolean;\r\n\r\n  constructor(props: DefaultComponentProps & { component: Element }) {\r\n    super(props);\r\n    const { component } = props;\r\n    this.component = component;\r\n    this.component.setAttribute('contenteditable', 'true');\r\n    this.eventBus = new EventBus();\r\n    this.oneStepToDelete = false;\r\n    this.eventBus.subscribe(BusEventTypes.insertSibling, this.key, (values?: { dataList?: DefaultDataItem[] }) => {\r\n      const { dataList = [] } = values || {};\r\n      switch (this.type) {\r\n        case BlockStyleTypes.paragragh:\r\n          this.blockMountProps!.handleInsertSiblings({ type: BlockStyleTypes.paragragh, childList: dataList }, false);\r\n          break;\r\n        case BlockStyleTypes.li:\r\n          this.blockMountProps!.handleEnter(this.key, []);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    this.InitEventManager();\r\n    this.refresh();\r\n  }\r\n\r\n  public InitEventManager() {\r\n    const handleEnter = () => {\r\n      this.oneStepToDelete = false;\r\n      this.eventBus.dispatch(BusEventTypes.findEnterAnchor);\r\n    };\r\n\r\n    const handleCtrlEnter = () => {\r\n      this.oneStepToDelete = false;\r\n      this.blockMountProps?.handleInsertSiblings({ type: BlockStyleTypes.paragragh, childList: [] }, false);\r\n    };\r\n\r\n    // component -> childList, 也是原子操作\r\n    const format = () => {\r\n      const childNodes = this.component.childNodes;\r\n      let childIndex = 0;\r\n\r\n      for (let i = 0; i < childNodes.length; i++) {\r\n        const child = childNodes[i];\r\n        if (child !== this.childList[childIndex]?.component) {\r\n          const newChild = new PlainText({ type: InlineStyleTypes.plainText, childList: [], content: child.textContent || '' });\r\n          this.mountChild(newChild);\r\n          this.component.insertBefore(newChild.component, child);\r\n          this.component.removeChild(child);\r\n          this.childList.splice(childIndex, 0, newChild);\r\n        }\r\n        childIndex += 1;\r\n      }\r\n    };\r\n\r\n    // 为了在paragraph为空时监听delelte，设置了input和keydown两个监听器\r\n    const handleDelete = (isKeyDown: boolean) => {\r\n      if (isKeyDown) {\r\n        if (this.oneStepToDelete) {\r\n          this.destroy();\r\n        }\r\n        return;\r\n      }\r\n      this.eventBus.dispatch(BusEventTypes.deleteEmpty);\r\n      // this.eventBus.dispatch(BusEventTypes.recordAnchor, {}, true);\r\n      // this.parseAnchor();\r\n      // console.log('after parseAnchor , the component: ', this.component.innerHTML);\r\n      if (!this.childList.length) {\r\n        console.log('handle empty paragraph~~');\r\n        if (this.oneStepToDelete) {\r\n          this.destroy();\r\n        } else {\r\n          this.oneStepToDelete = true;\r\n        }\r\n      }\r\n    };\r\n\r\n    // 消除零宽空格\r\n    const removeNoWidthSpace = () => {\r\n      const func = (node: Node) => {\r\n        if (node instanceof Text && node.textContent?.match(/\\u200B/u)) {\r\n          const content = node.textContent;\r\n          if (content === '\\u200B') {\r\n            node.remove();\r\n          }\r\n          return;\r\n        }\r\n        node.childNodes.forEach(child => func(child));\r\n      };\r\n      func(this.component);\r\n    };\r\n\r\n    const BlockTrans = (md: string) => {\r\n      if (md.replace('<wbr>', '') === '-&nbsp;') {\r\n        this.blockMountProps!.handleInsertSiblings({ type: BlockStyleTypes.list, childList: [] }, true);\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n\r\n    // 核心逻辑\r\n    const handleReParse = () => {\r\n      this.oneStepToDelete = false;\r\n      removeNoWidthSpace();\r\n      this.eventBus.dispatch(BusEventTypes.recordAnchor, {}, true, () => {\r\n        const wbr = new Wbr({ type: InlineStyleTypes.wbr, childList: [] });\r\n        this.mountChild(wbr);\r\n        this.childList.push(wbr);\r\n        this.component.appendChild(wbr.component);\r\n      });\r\n      format();\r\n      const md = this.getMarkdown().replace('\\u200B', '');\r\n      console.log('md: ', md);\r\n\r\n      if (this.type === BlockStyleTypes.paragragh && BlockTrans(md)) return;\r\n\r\n      const dataList = getDataList(md);\r\n      // console.log('dataList: ', dataList);\r\n      this.setChildList(dataList);\r\n      this.eventBus.dispatch(BusEventTypes.parseAnchor, {}, true);\r\n      // console.log('after parseAnchor , the component: ', this.component.innerHTML);\r\n      this.eventBus.dispatch(BusEventTypes.showMarkdown, { show: true });\r\n    };\r\n\r\n    const handleTab = (isInside: boolean) => {\r\n      if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n      this.blockMountProps!.handleTab(this.key, isInside);\r\n    };\r\n\r\n    const em = new EventManager({ target: this.component, handleEnter, handleCtrlEnter, handleDelete, handleReParse, handleTab });\r\n  }\r\n\r\n  public getMarkdown() {\r\n    return this.childList.reduce((pre, cur) => {\r\n      return pre + cur.getMarkdown();\r\n    }, '');\r\n  }\r\n\r\n  public getPosition = (): [number, number] => {\r\n    return [this.component.clientTop, this.component.clientHeight + this.component.clientTop];\r\n  };\r\n\r\n  public onChildInsertSibling = (key: string, siblings: DefaultComponent[], replace: boolean) => {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    const index = this.findChildIndex(key);\r\n    if (replace) {\r\n      const newList = this.childList.slice();\r\n      newList.splice(index, 1, ...siblings);\r\n      this.setChildList(newList);\r\n    } else {\r\n      const newList = this.childList.slice();\r\n      newList.splice(index + 1, 0, ...siblings);\r\n      this.setChildList(newList);\r\n    }\r\n  };\r\n\r\n  public detectAnchor = (): boolean => {\r\n    const selection = document.getSelection();\r\n    if (this.component.contains(selection?.anchorNode || null)) {\r\n      if (!this.showMarkdown) {\r\n        this.showMarkdown = true;\r\n        this.eventBus.dispatch(BusEventTypes.showMarkdown, { show: true });\r\n      }\r\n      return true;\r\n    }\r\n    // eslint-disable-next-line\r\n    else {\r\n      if (this.showMarkdown) {\r\n        this.showMarkdown = false;\r\n        this.eventBus.dispatch(BusEventTypes.showMarkdown, { show: false });\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n\r\n  public appendChild(child: InlineComponent) {\r\n    this.setChildList([...this.childList, child]);\r\n  }\r\n\r\n  // 原子操作，不涉及setChildList\r\n  public destroyChild(key: string) {\r\n    console.log('destroy: ', key);\r\n    const index = this.findChildIndex(key);\r\n    this.childList.splice(index, 1);\r\n    this.eventBus.remove(key);\r\n    const childNode = this.component.childNodes[index];\r\n    if (childNode && this.component.contains(childNode))\r\n      this.component.removeChild(this.component.childNodes[index]);\r\n  }\r\n\r\n  public destroy = () => {\r\n    this.blockMountProps?.handleDestroy();\r\n  };\r\n\r\n  // childList -> component\r\n  public setChildList(childList: DefaultComponent[] | DefaultDataItem[]) {\r\n    diff(this, childList);\r\n  }\r\n\r\n  public setAnchor(offset: number) {\r\n    const selection = document.getSelection();\r\n    if (offset === 0) {\r\n      selection?.collapse(this.component, 0);\r\n    } else if (offset === -1) {\r\n      selection?.collapse(this.component);\r\n    }\r\n  }\r\n\r\n  private onChildEnter(key: string, _cur?: DefaultDataItem, _next?: DefaultDataItem) {\r\n    if (!this.mounted) throw new Error('unmounted component cannot use this function');\r\n    const index = this.findChildIndex(key);\r\n    const curDataList = componentsToDataList(this.childList.slice(0, index) as InlineComponent[]);\r\n    const nextDataList = componentsToDataList(this.childList.slice(index + 1) as InlineComponent[]);\r\n    _cur && curDataList.push(_cur);\r\n    _next && nextDataList.unshift(_next);\r\n    this.setChildList(curDataList);\r\n    this.blockMountProps!.handleEnter(this.key, nextDataList);\r\n  }\r\n\r\n  private onChildDestroy(key: string) {\r\n    console.log('the key to destroy: ', key);\r\n    const index = this.childList.findIndex(child => child.key === key);\r\n    const newList = this.childList.slice();\r\n    newList.splice(index, 1);\r\n    this.setChildList(newList);\r\n\r\n    // this.component.removeChild(this.component.childNodes[index]);\r\n  }\r\n\r\n  public mountChild(child: InlineComponent) {\r\n    const that = this;\r\n    child.mount({\r\n      eventBus: this.eventBus,\r\n      handleEnter: this.onChildEnter.bind(that),\r\n      handleDestroy: this.onChildDestroy.bind(that),\r\n      handleInsertSibling: this.onChildInsertSibling.bind(that)\r\n    });\r\n  }\r\n\r\n  public mount(props: BlockMountProps) {\r\n    this.mounted = true;\r\n    this.blockMountProps = props;\r\n    this.childList.forEach(child => {\r\n      this.mountChild(child as InlineComponent);\r\n    });\r\n  }\r\n\r\n  abstract refresh(): void;\r\n\r\n}\r\n\r\n// 针对inlineComponent的diff算法\r\nexport function diff(root: DefaultComponent, DataTree: (DefaultDataItem | DefaultComponent)[]): DefaultComponent {\r\n  console.log('==========diff start');\r\n  console.log(' -- root.innerHTML: ', root.component.innerHTML);\r\n  console.log(' -- root.childList: ');\r\n  root.childList.forEach(child => {\r\n    console.log(child.type, (child as PlainText).content);\r\n    if (child.childList.length) {\r\n      child.childList.forEach(c => console.log(c.type, (c as PlainText).content));\r\n    }\r\n  });\r\n  console.log(' -- DataTree: ', DataTree.length, DataTree);\r\n  const componentTree = root.childList;\r\n  let lastIndex = 0;\r\n  let resultList: Array<number> = [];\r\n  DataTree.forEach((item: DefaultDataItem | DefaultComponent) => {\r\n    let flag = false;\r\n    for (let i = lastIndex; i < componentTree.length; i++) {\r\n      if (item.type === componentTree[i].type) {\r\n        if (item.type === InlineStyleTypes.plainText) {\r\n          (componentTree[i] as PlainText).setContent(item instanceof DefaultComponent ? (item as PlainText).content : item.content || '');\r\n        } else if (componentTree[i].childList.length || item.childList.length) {\r\n          diff(componentTree[i], item.childList);\r\n        }\r\n        resultList.push(i);\r\n        lastIndex = i + 1;\r\n        flag = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!flag) {\r\n      console.log('insert new component: ', item);\r\n      if (item instanceof DefaultComponent) {\r\n        root.mountChild(item);\r\n        componentTree.splice(lastIndex, 0, item as DefaultComponent);\r\n        root.component.insertBefore(item.component, root.component.childNodes[lastIndex]);\r\n        resultList.push(lastIndex);\r\n        lastIndex += 1;\r\n      } else {\r\n        const component: InlineComponent = dataListToComponents([item])[0];\r\n        root.mountChild(component);\r\n        componentTree.splice(lastIndex, 0, component);\r\n        root.component.insertBefore(component.component, root.component.childNodes[lastIndex]);\r\n        resultList.push(lastIndex);\r\n        lastIndex += 1;\r\n      }\r\n    }\r\n  });\r\n  resultList.push(Math.max(componentTree.length, DataTree.length));\r\n  resultList = resultList.reverse();\r\n  resultList.push(-1);\r\n  resultList.reduce((pre: number, cur: number): number => {\r\n    if (pre - cur > 1) {\r\n      for (let i = pre - 1; i > cur; i--) {\r\n        console.log('destroy: ', i, componentTree[i]);\r\n        if (componentTree[i]) {\r\n          root.destroyChild(componentTree[i].key);\r\n        }\r\n      }\r\n    }\r\n    return cur;\r\n  });\r\n  console.log('==========diff end');\r\n  return root;\r\n}","D:\\workspace\\MEdit\\src\\component\\Block\\dndWrapper.tsx",["299","300","301","302"],{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","severity":1,"message":"318","line":26,"column":23,"nodeType":"319","endLine":26,"endColumn":27},{"ruleId":"303","replacedBy":"320"},{"ruleId":"305","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"307","replacedBy":"324"},{"ruleId":"309","replacedBy":"325"},{"ruleId":"311","replacedBy":"326"},{"ruleId":"313","replacedBy":"327"},{"ruleId":"315","replacedBy":"328"},{"ruleId":"317","severity":1,"message":"329","line":16,"column":6,"nodeType":"330","endLine":16,"endColumn":8,"suggestions":"331"},{"ruleId":"303","replacedBy":"332"},{"ruleId":"305","replacedBy":"333"},{"ruleId":"322","replacedBy":"334"},{"ruleId":"307","replacedBy":"335"},{"ruleId":"309","replacedBy":"336"},{"ruleId":"311","replacedBy":"337"},{"ruleId":"313","replacedBy":"338"},{"ruleId":"315","replacedBy":"339"},{"ruleId":"317","severity":1,"message":"329","line":14,"column":6,"nodeType":"330","endLine":14,"endColumn":8,"suggestions":"340"},{"ruleId":"341","severity":1,"message":"342","line":1,"column":6,"nodeType":"343","messageId":"344","endLine":1,"endColumn":25},{"ruleId":"345","severity":1,"message":"342","line":1,"column":6,"nodeType":"343","messageId":"344","endLine":1,"endColumn":25},{"ruleId":"341","severity":1,"message":"346","line":7,"column":6,"nodeType":"343","messageId":"344","endLine":7,"endColumn":15},{"ruleId":"345","severity":1,"message":"346","line":7,"column":6,"nodeType":"343","messageId":"344","endLine":7,"endColumn":15},{"ruleId":"347","severity":1,"message":"348","line":17,"column":7,"nodeType":"349","messageId":"350","endLine":17,"endColumn":19},{"ruleId":"347","severity":1,"message":"348","line":27,"column":7,"nodeType":"349","messageId":"350","endLine":27,"endColumn":19},{"ruleId":"347","severity":1,"message":"348","line":51,"column":9,"nodeType":"349","messageId":"350","endLine":51,"endColumn":21},{"ruleId":"347","severity":1,"message":"348","line":60,"column":5,"nodeType":"349","messageId":"350","endLine":60,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":69,"column":7,"nodeType":"349","messageId":"350","endLine":69,"endColumn":19},{"ruleId":"347","severity":1,"message":"348","line":73,"column":5,"nodeType":"349","messageId":"350","endLine":73,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":78,"column":5,"nodeType":"349","messageId":"350","endLine":78,"endColumn":16},{"ruleId":"303","replacedBy":"351"},{"ruleId":"305","replacedBy":"352"},{"ruleId":"322","replacedBy":"353"},{"ruleId":"307","replacedBy":"354"},{"ruleId":"309","replacedBy":"355"},{"ruleId":"311","replacedBy":"356"},{"ruleId":"313","replacedBy":"357"},{"ruleId":"315","replacedBy":"358"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","replacedBy":"316"},{"ruleId":"341","severity":1,"message":"359","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":26},{"ruleId":"345","severity":1,"message":"359","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":26},{"ruleId":"341","severity":1,"message":"360","line":3,"column":10,"nodeType":"343","messageId":"344","endLine":3,"endColumn":25},{"ruleId":"345","severity":1,"message":"360","line":3,"column":10,"nodeType":"343","messageId":"344","endLine":3,"endColumn":25},{"ruleId":"341","severity":1,"message":"359","line":3,"column":44,"nodeType":"343","messageId":"344","endLine":3,"endColumn":60},{"ruleId":"345","severity":1,"message":"359","line":3,"column":44,"nodeType":"343","messageId":"344","endLine":3,"endColumn":60},{"ruleId":"361","severity":1,"message":"362","line":16,"column":3,"nodeType":"363","messageId":"364","endLine":18,"endColumn":4},{"ruleId":"347","severity":1,"message":"348","line":30,"column":7,"nodeType":"349","messageId":"350","endLine":30,"endColumn":18},{"ruleId":"347","severity":1,"message":"348","line":52,"column":5,"nodeType":"349","messageId":"350","endLine":52,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":100,"column":5,"nodeType":"349","messageId":"350","endLine":100,"endColumn":16},{"ruleId":"341","severity":1,"message":"365","line":7,"column":8,"nodeType":"343","messageId":"344","endLine":7,"endColumn":20},{"ruleId":"345","severity":1,"message":"365","line":7,"column":8,"nodeType":"343","messageId":"344","endLine":7,"endColumn":20},{"ruleId":"347","severity":1,"message":"348","line":235,"column":5,"nodeType":"349","messageId":"350","endLine":235,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":241,"column":5,"nodeType":"349","messageId":"350","endLine":241,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":75,"column":7,"nodeType":"349","messageId":"350","endLine":75,"endColumn":18},{"ruleId":"366","severity":1,"message":"367","line":111,"column":95,"nodeType":"368","messageId":"369","endLine":111,"endColumn":135},{"ruleId":"341","severity":1,"message":"370","line":2,"column":3,"nodeType":"343","messageId":"344","endLine":2,"endColumn":10},{"ruleId":"341","severity":1,"message":"371","line":3,"column":3,"nodeType":"343","messageId":"344","endLine":3,"endColumn":15},{"ruleId":"341","severity":1,"message":"372","line":4,"column":3,"nodeType":"343","messageId":"344","endLine":4,"endColumn":14},{"ruleId":"341","severity":1,"message":"373","line":5,"column":3,"nodeType":"343","messageId":"344","endLine":5,"endColumn":15},{"ruleId":"341","severity":1,"message":"374","line":6,"column":3,"nodeType":"343","messageId":"344","endLine":6,"endColumn":14},{"ruleId":"341","severity":1,"message":"375","line":7,"column":3,"nodeType":"343","messageId":"344","endLine":7,"endColumn":18},{"ruleId":"341","severity":1,"message":"376","line":8,"column":3,"nodeType":"343","messageId":"344","endLine":8,"endColumn":14},{"ruleId":"341","severity":1,"message":"377","line":9,"column":3,"nodeType":"343","messageId":"344","endLine":9,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":28,"column":7,"nodeType":"349","messageId":"350","endLine":28,"endColumn":20},{"ruleId":"347","severity":1,"message":"348","line":42,"column":9,"nodeType":"349","messageId":"350","endLine":42,"endColumn":22},{"ruleId":"303","replacedBy":"378"},{"ruleId":"305","replacedBy":"379"},{"ruleId":"322","replacedBy":"380"},{"ruleId":"307","replacedBy":"381"},{"ruleId":"309","replacedBy":"382"},{"ruleId":"311","replacedBy":"383"},{"ruleId":"313","replacedBy":"384"},{"ruleId":"315","replacedBy":"385"},{"ruleId":"347","severity":1,"message":"348","line":15,"column":5,"nodeType":"349","messageId":"350","endLine":15,"endColumn":16},{"ruleId":"341","severity":1,"message":"365","line":7,"column":8,"nodeType":"343","messageId":"344","endLine":7,"endColumn":20},{"ruleId":"345","severity":1,"message":"365","line":7,"column":8,"nodeType":"343","messageId":"344","endLine":7,"endColumn":20},{"ruleId":"386","severity":1,"message":"387","line":28,"column":5,"nodeType":"388","messageId":"389","endLine":35,"endColumn":19},{"ruleId":"347","severity":1,"message":"348","line":63,"column":5,"nodeType":"349","messageId":"350","endLine":63,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":73,"column":5,"nodeType":"349","messageId":"350","endLine":73,"endColumn":16},{"ruleId":"366","severity":1,"message":"367","line":167,"column":74,"nodeType":"368","messageId":"369","endLine":167,"endColumn":114},{"ruleId":"347","severity":1,"message":"348","line":16,"column":5,"nodeType":"349","messageId":"350","endLine":16,"endColumn":16},{"ruleId":"341","severity":1,"message":"390","line":2,"column":3,"nodeType":"343","messageId":"344","endLine":2,"endColumn":9},{"ruleId":"341","severity":1,"message":"391","line":3,"column":3,"nodeType":"343","messageId":"344","endLine":3,"endColumn":5},{"ruleId":"341","severity":1,"message":"392","line":4,"column":3,"nodeType":"343","messageId":"344","endLine":4,"endColumn":12},{"ruleId":"341","severity":1,"message":"393","line":5,"column":3,"nodeType":"343","messageId":"344","endLine":5,"endColumn":13},{"ruleId":"341","severity":1,"message":"394","line":6,"column":3,"nodeType":"343","messageId":"344","endLine":6,"endColumn":6},{"ruleId":"341","severity":1,"message":"395","line":7,"column":3,"nodeType":"343","messageId":"344","endLine":7,"endColumn":12},{"ruleId":"341","severity":1,"message":"396","line":8,"column":3,"nodeType":"343","messageId":"344","endLine":8,"endColumn":6},{"ruleId":"341","severity":1,"message":"397","line":12,"column":3,"nodeType":"343","messageId":"344","endLine":12,"endColumn":10},{"ruleId":"341","severity":1,"message":"398","line":13,"column":3,"nodeType":"343","messageId":"344","endLine":13,"endColumn":12},{"ruleId":"341","severity":1,"message":"399","line":14,"column":3,"nodeType":"343","messageId":"344","endLine":14,"endColumn":12},{"ruleId":"341","severity":1,"message":"400","line":15,"column":3,"nodeType":"343","messageId":"344","endLine":15,"endColumn":7},{"ruleId":"341","severity":1,"message":"401","line":16,"column":3,"nodeType":"343","messageId":"344","endLine":16,"endColumn":5},{"ruleId":"341","severity":1,"message":"402","line":17,"column":3,"nodeType":"343","messageId":"344","endLine":17,"endColumn":14},{"ruleId":"341","severity":1,"message":"403","line":18,"column":3,"nodeType":"343","messageId":"344","endLine":18,"endColumn":8},{"ruleId":"341","severity":1,"message":"359","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":26},{"ruleId":"345","severity":1,"message":"359","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":26},{"ruleId":"341","severity":1,"message":"359","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":26},{"ruleId":"345","severity":1,"message":"359","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":26},{"ruleId":"341","severity":1,"message":"359","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":26},{"ruleId":"345","severity":1,"message":"359","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":26},{"ruleId":"347","severity":1,"message":"348","line":110,"column":7,"nodeType":"349","messageId":"350","endLine":110,"endColumn":20},{"ruleId":"347","severity":1,"message":"348","line":75,"column":9,"nodeType":"349","messageId":"350","endLine":75,"endColumn":20},{"ruleId":"347","severity":1,"message":"348","line":31,"column":18,"nodeType":"349","messageId":"350","endLine":31,"endColumn":31},{"ruleId":"347","severity":1,"message":"348","line":40,"column":20,"nodeType":"349","messageId":"350","endLine":40,"endColumn":33},{"ruleId":"347","severity":1,"message":"348","line":95,"column":9,"nodeType":"349","messageId":"350","endLine":95,"endColumn":20},{"ruleId":"347","severity":1,"message":"348","line":139,"column":7,"nodeType":"349","messageId":"350","endLine":139,"endColumn":18},{"ruleId":"341","severity":1,"message":"404","line":156,"column":11,"nodeType":"343","messageId":"344","endLine":156,"endColumn":13},{"ruleId":"345","severity":1,"message":"404","line":156,"column":11,"nodeType":"343","messageId":"344","endLine":156,"endColumn":13},{"ruleId":"347","severity":1,"message":"348","line":208,"column":5,"nodeType":"349","messageId":"350","endLine":208,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":247,"column":5,"nodeType":"349","messageId":"350","endLine":247,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":280,"column":3,"nodeType":"349","messageId":"350","endLine":280,"endColumn":14},{"ruleId":"347","severity":1,"message":"348","line":281,"column":3,"nodeType":"349","messageId":"350","endLine":281,"endColumn":14},{"ruleId":"347","severity":1,"message":"348","line":282,"column":3,"nodeType":"349","messageId":"350","endLine":282,"endColumn":14},{"ruleId":"347","severity":1,"message":"348","line":284,"column":5,"nodeType":"349","messageId":"350","endLine":284,"endColumn":16},{"ruleId":"347","severity":1,"message":"348","line":286,"column":36,"nodeType":"349","messageId":"350","endLine":286,"endColumn":47},{"ruleId":"347","severity":1,"message":"348","line":289,"column":3,"nodeType":"349","messageId":"350","endLine":289,"endColumn":14},{"ruleId":"347","severity":1,"message":"348","line":309,"column":7,"nodeType":"349","messageId":"350","endLine":309,"endColumn":18},{"ruleId":"347","severity":1,"message":"348","line":332,"column":9,"nodeType":"349","messageId":"350","endLine":332,"endColumn":20},{"ruleId":"347","severity":1,"message":"348","line":340,"column":3,"nodeType":"349","messageId":"350","endLine":340,"endColumn":14},{"ruleId":"341","severity":1,"message":"405","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":25},{"ruleId":"345","severity":1,"message":"405","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":25},{"ruleId":"341","severity":1,"message":"365","line":3,"column":8,"nodeType":"343","messageId":"344","endLine":3,"endColumn":20},{"ruleId":"345","severity":1,"message":"365","line":3,"column":8,"nodeType":"343","messageId":"344","endLine":3,"endColumn":20},"no-native-reassign",["406"],"no-negated-in-lhs",["407"],"lines-around-directive",["408"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","Assignments to the 'isDragStart' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal",["406"],["407"],"jsx-a11y/accessible-emoji",[],["408"],[],[],[],[],"React Hook useEffect has a missing dependency: 'focusManager'. Either include it or remove the dependency array.","ArrayExpression",["409"],["406"],["407"],[],["408"],[],[],[],[],["410"],"no-unused-vars","'BlockComponentTypes' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'FontColor' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected",["406"],["407"],[],["408"],[],[],[],[],"'InlineStyleTypes' is defined but never used.","'BlockStyleTypes' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'FocusManager' is defined but never used.","react/no-danger","Dangerous property 'dangerouslySetInnerHTML' found","JSXAttribute","dangerousProp","'refresh' is defined but never used.","'recordAnchor' is defined but never used.","'parseAnchor' is defined but never used.","'showMarkdown' is defined but never used.","'selectState' is defined but never used.","'findEnterAnchor' is defined but never used.","'deleteEmpty' is defined but never used.","'insertSibling' is defined but never used.",["406"],["407"],[],["408"],[],[],[],[],"no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'strong' is defined but never used.","'em' is defined but never used.","'highlight' is defined but never used.","'inlineCode' is defined but never used.","'del' is defined but never used.","'plainText' is defined but never used.","'wbr' is defined but never used.","'heading' is defined but never used.","'paragragh' is defined but never used.","'codeBlock' is defined but never used.","'list' is defined but never used.","'li' is defined but never used.","'indentation' is defined but never used.","'table' is defined but never used.","'em' is assigned a value but never used.","'DefaultDataItem' is defined but never used.","no-global-assign","no-unsafe-negation","padding-line-between-statements",{"desc":"411","fix":"412"},{"desc":"411","fix":"413"},"Update the dependencies array to be: [focusManager]",{"range":"414","text":"415"},{"range":"416","text":"415"},[525,527],"[focusManager]",[426,428]]